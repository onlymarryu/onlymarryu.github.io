{"title":"第16章_反射","uid":"64686085a348e977c3de22cd2f49f718","slug":"第16章_反射","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:10:43.736Z","comments":true,"path":"api/articles/第16章_反射.json","keywords":"java","cover":[],"content":"<h1 id=\"通过案例体会反射的好处\"><a class=\"markdownIt-Anchor\" href=\"#通过案例体会反射的好处\">#</a> 通过案例体会反射的好处</h1>\n<p>案例：美团外卖 —&gt; 付款 —》要么用微信支付 要么用支付宝支付</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//接口的制定方：美团外卖</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Mtwm</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//在线支付功能：</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">payOnline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">WeChat</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Mtwm</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">payOnline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//具体实现微信支付的功能：</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我已经点了外卖，正在使用微信支付\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AliPay</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Mtwm</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">payOnline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//具体的支付宝支付：</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我已经点了外卖，我正在使用支付宝进行支付\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">BankCard</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Mtwm</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">payOnline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我已经定了外卖，我正在用招商银行信用卡支付\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token comment\">//定义一个字符串，用来模拟前台的支付方式：</span>\n<span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"微信\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"微信\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//str.equals(\"微信\")---？避免空指针异常</span>\n<span class=\"token comment\">//微信支付：</span>\n<span class=\"token comment\">//new WeChat().payOnline();</span>\n<span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">WeChat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"支付宝\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token comment\">//支付宝支付：</span>\n<span class=\"token comment\">//new AliPay().payOnline();</span>\n<span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">AliPay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"招商银行\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BankCard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//微信支付</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WeChat</span> wc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\nwc<span class=\"token punctuation\">.</span><span class=\"token function\">payOnline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">//支付宝支付</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">AliPay</span> ap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\nap<span class=\"token punctuation\">.</span><span class=\"token function\">payOnline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//招商银行支付</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BankCard</span> bc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\nbc<span class=\"token punctuation\">.</span><span class=\"token function\">payOnline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>为了提高代码的扩展性 —》面向对象特性：多态：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//定义一个字符串，用来模拟前台的支付方式：</span>\n        <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"微信\"</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"微信\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//str.equals(\"微信\")---？避免空指针异常</span>\n            <span class=\"token comment\">//微信支付：</span>\n            <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">WeChat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"支付宝\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">//支付宝支付：</span>\n            <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">AliPay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"招商银行\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BankCard</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//方法形参是接口，具体传入的是接口的实现类的对象---》多态的一种形式</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">pay</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Mtwm</span> m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        m<span class=\"token punctuation\">.</span><span class=\"token function\">payOnline</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>多态确实可以提高代码的扩展性，但是：扩展性没有达到最好。</p>\n<p>怎么没有达到最好：上面的分支，还是需要手动的删除或者添加。</p>\n<p>解决办法：反射机制</p>\n<p>利用反射实现上述功能：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Exception</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//定义一个字符串，用来模拟前台的支付方式：</span>\n        <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"com.zhaoss.test01.AliPay\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//字符串：实际上：就是微信类的全限定路径</span>\n\n        <span class=\"token comment\">//下面的代码就是利用反射：</span>\n        <span class=\"token class-name\">Class</span> cls <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//cls--\\>Class类具体的对象--》AliPay字节码信息</span>\n        <span class=\"token class-name\">Object</span> o <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Method</span> method <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"payOnline\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        method<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"通过概念再体会反射\"><a class=\"markdownIt-Anchor\" href=\"#通过概念再体会反射\">#</a> 通过概念再体会反射</h1>\n<p>JAVA 反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，</p>\n<p>都能够调用它的任意方法和属性；这种动态获取信息以及动态调用对象方法的功能称为 java 语言的反射机制。</p>\n<p>在编译后产生字节码文件的时候，类加载器子系统通过二进制字节流，负责从文件系统加载 class 文件。</p>\n<p>在执行程序（java.exe）时候，将字节码文件读入 JVM 中 —&gt; 这个过程叫做类的加载。然后在内存中对应创建一个 java.lang.Class 对象–&gt; 这个对象会被放入字节码信息中，这个 Class 对象，就对应加载那个字节码信息，这个对象将被作为程序访问方法区中的这个类的各种数据的外部接口。</p>\n<p>所以：我们可以通过这个对象看到类的结构，这个对象就好像是一面镜子，透过镜子看到类的各种信息，我们形象的称之为反射</p>\n<p>这种 “看透” class 的能力（the ability of the program to examine itself）被称为 introspection（内省、内观、反省）。Reflection 和 introspection 是常被并提的两个术语。</p>\n<p>说明：在运行期间，如果我们要产生某个类的对象，Java 虚拟机 (JVM) 会检查该类型的 Class 对象是否已被加载。</p>\n<p>如果没有被加载，JVM 会根据类的名称找到.class 文件并加载它。一旦某个类型的 Class 对象已被加载到内存，就可以用它来产生该类型的所有对象。</p>\n<p>补充:</p>\n<p>动态语膏 vs 静态语言</p>\n<p>1、动态语言</p>\n<p>是一类在运行时可以改变其结构的语言：例如新的函数、对象、甚至代码可以</p>\n<p>被引进，已有的函数可以被删除或是其他结构上的变化。通俗点说就是在运</p>\n<p>行时代码可以根据某些条件改变自身结构。</p>\n<p>主要动态语言: Object-C、 C#、JavaScript、 PHP、 Python、 Erlang 。</p>\n<p>2、静态语言</p>\n<p>与动态语言相对应的，运行时结构不可变的语言就是静态语言。如 Java、C、</p>\n<p>C++。</p>\n<p>所以 Java 不是动态语言，但 Java 可以称之为 “准动态语言”。即 Java 有一定的动</p>\n<p>态性，我们可以利用反射机制、字节码操作获得类似动态语言的特性。</p>\n<p>Java 的动态性让编程的时候更加灵活！</p>\n<p>Class 类的理解</p>\n<img src=\"/:/post/%E7%AC%AC16%E7%AB%A0_%E5%8F%8D%E5%B0%84/6d8b0c266d2a65f30295f32185c3256c.png\" class=\"\">\n<h1 id=\"提供丰富的类\"><a class=\"markdownIt-Anchor\" href=\"#提供丰富的类\">#</a> 提供丰富的类</h1>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//作为一个父类</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//属性</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//方法</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Person---eat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Person---sleep\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//Student作为子类</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//属性：</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> sno<span class=\"token punctuation\">;</span><span class=\"token comment\">//学号</span>\n    <span class=\"token keyword\">double</span> height<span class=\"token punctuation\">;</span><span class=\"token comment\">//身高</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">double</span> weight<span class=\"token punctuation\">;</span><span class=\"token comment\">//体重</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> score<span class=\"token punctuation\">;</span><span class=\"token comment\">//成绩</span>\n\n    <span class=\"token comment\">//方法：</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">showInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"我是一名三好学生\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">work</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我以后会找工作--》成为码农 程序员 程序猿 程序媛\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">//构造器</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"空参构造器\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> sno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sno <span class=\"token operator\">=</span> sno<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> sno<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sno <span class=\"token operator\">=</span> sno<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>weight <span class=\"token operator\">=</span> weight<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"获取字节码信息的四种形式\"><a class=\"markdownIt-Anchor\" href=\"#获取字节码信息的四种形式\">#</a> 获取字节码信息的四种形式</h1>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">ClassNotFoundException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//案例：以Person的字节码信息为案例</span>\n        <span class=\"token comment\">//方式1：通过getClass()方法获取</span>\n        <span class=\"token class-name\">Person</span> p <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Class</span> c1 <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//方式2：通过内置class属性：</span>\n        <span class=\"token class-name\">Class</span> c2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c1<span class=\"token operator\">==</span>c2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//注意：方式1和方式2 不常用</span>\n\n        <span class=\"token comment\">//方式3：--》用的最多：调用Class类提供的静态方法forName</span>\n        <span class=\"token class-name\">Class</span> c3 <span class=\"token operator\">=</span> <span class=\"token class-name\">Class</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.zhaoss.test02.Person\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//方式4：利用类的加载器(了解技能点)</span>\n        <span class=\"token class-name\">ClassLoader</span> loader <span class=\"token operator\">=</span> <span class=\"token class-name\">Test</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Class</span> c4 <span class=\"token operator\">=</span> loader<span class=\"token punctuation\">.</span><span class=\"token function\">loadClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"com.zhaoss.test02.Person\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"可以作为class类的实例的种类\"><a class=\"markdownIt-Anchor\" href=\"#可以作为class类的实例的种类\">#</a> 可以作为 Class 类的实例的种类</h1>\n<p>Class 类的具体的实例：</p>\n<p>（1）类：外部类，内部类</p>\n<p>（2）接口</p>\n<p>（3）注解</p>\n<p>（4）数组</p>\n<p>（5）基本数据类型</p>\n<p>（6）void</p>\n<p>验证：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Demo</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\n            <span class=\"token class-name\">Class</span>类的具体的实例：\n            （<span class=\"token number\">1</span>）类：外部类，内部类\n            （<span class=\"token number\">2</span>）接口\n            （<span class=\"token number\">3</span>）注解\n            （<span class=\"token number\">4</span>）数组\n            （<span class=\"token number\">5</span>）基本数据类型\n            （<span class=\"token number\">6</span>）<span class=\"token keyword\">void</span>\n            \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n            <span class=\"token class-name\">Class</span> c1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Class</span> c2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Comparable</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Class</span> c3 <span class=\"token operator\">=</span> <span class=\"token class-name\">Override</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Class</span> c4 <span class=\"token operator\">=</span> arr1<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> arr2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Class</span> c5 <span class=\"token operator\">=</span> arr2<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c4<span class=\"token operator\">==</span>c5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//结果：true .同一个维度，同一个元素类型,得到的字节码就是同一个</span>\n\n        <span class=\"token class-name\">Class</span> c6 <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Class</span> c7 <span class=\"token operator\">=</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"获取运行时类的完整结构\"><a class=\"markdownIt-Anchor\" href=\"#获取运行时类的完整结构\">#</a> 获取运行时类的完整结构</h1>\n<h2 id=\"补充完善上面提供的丰富的类\"><a class=\"markdownIt-Anchor\" href=\"#补充完善上面提供的丰富的类\">#</a> 补充完善上面提供的丰富的类</h2>\n<ol>\n<li>// 作为一个父类</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Serializable</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//属性</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//方法</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Person---eat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sleep</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Person---sleep\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">//Student作为子类</span>\n<span class=\"token annotation punctuation\">@MyAnnotation</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Student</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Person</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MyInterface</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//属性：</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> sno<span class=\"token punctuation\">;</span><span class=\"token comment\">//学号</span>\n    <span class=\"token keyword\">double</span> height<span class=\"token punctuation\">;</span><span class=\"token comment\">//身高</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">double</span> weight<span class=\"token punctuation\">;</span><span class=\"token comment\">//体重</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> score<span class=\"token punctuation\">;</span><span class=\"token comment\">//成绩</span>\n\n    <span class=\"token comment\">//方法：</span>\n    <span class=\"token annotation punctuation\">@MyAnnotation</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"himethod\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">showInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"我是一名三好学生\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">showInfo</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> a<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"重载方法====我是一名三好学生\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">work</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我以后会找工作--》成为码农 程序员 程序猿 程序媛\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">happy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"做人最重要的就是开心每一天\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getSno</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> sno<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">//构造器</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"空参构造器\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> sno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sno <span class=\"token operator\">=</span> sno<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> sno<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sno <span class=\"token operator\">=</span> sno<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>weight <span class=\"token operator\">=</span> weight<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> sno<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> height<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> weight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>sno <span class=\"token operator\">=</span> sno<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token annotation punctuation\">@MyAnnotation</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">=</span><span class=\"token string\">\"hellomyMethod\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"我重写了myMethod方法。。\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"Student&#123;\"</span> <span class=\"token operator\">+</span>\n            <span class=\"token string\">\"sno=\"</span> <span class=\"token operator\">+</span> sno <span class=\"token operator\">+</span>\n            <span class=\"token string\">\", height=\"</span> <span class=\"token operator\">+</span> height <span class=\"token operator\">+</span>\n            <span class=\"token string\">\", weight=\"</span> <span class=\"token operator\">+</span> weight <span class=\"token operator\">+</span>\n            <span class=\"token string\">\", score=\"</span> <span class=\"token operator\">+</span> score <span class=\"token operator\">+</span>\n            <span class=\"token char\">'&#125;'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\n    <span class=\"token annotation punctuation\">@Target</span><span class=\"token operator\">:</span>定义当前注解能够修饰程序中的哪些元素\n        <span class=\"token annotation punctuation\">@Retention</span><span class=\"token operator\">:</span>定义注解的声明周期\n            \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n<span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token constant\">TYPE</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">FIELD</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">METHOD</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">PARAMETER</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">CONSTRUCTOR</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">LOCAL_VARIABLE</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n            <span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RUNTIME</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">MyAnnotation</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">String</span> <span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//属性</span>\n        <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">MyInterface</span> <span class=\"token punctuation\">&#123;</span><span class=\"token comment\">//自定义的接口</span>\n<span class=\"token comment\">//随便定义一个抽象方法：</span>\n<span class=\"token keyword\">void</span> <span class=\"token function\">myMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"获取构造器和创建对象\"><a class=\"markdownIt-Anchor\" href=\"#获取构造器和创建对象\">#</a> 获取构造器和创建对象</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test01</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">NoSuchMethodException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IllegalAccessException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InvocationTargetException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InstantiationException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//获取字节码信息：</span>\n        <span class=\"token class-name\">Class</span> cls <span class=\"token operator\">=</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//通过字节码信息可以获取构造器：</span>\n        <span class=\"token comment\">//getConstructors只能获取当前运行时类的被public修饰的构造器</span>\n        <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> c1 <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getConstructors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constructor</span> c<span class=\"token operator\">:</span>c1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//getDeclaredConstructors:获取运行时类的全部修饰符的构造器</span>\n        <span class=\"token class-name\">Constructor</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> c2 <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredConstructors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Constructor</span> c<span class=\"token operator\">:</span>c2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取指定的构造器：</span>\n        <span class=\"token comment\">//得到空构造器</span>\n        <span class=\"token class-name\">Constructor</span> con1 <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getConstructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>con1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//得到两个参数的有参构造器：</span>\n        <span class=\"token class-name\">Constructor</span> con2 <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getConstructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>con2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//得到一个参数的有参构造器：并且是private修饰的</span>\n        <span class=\"token class-name\">Constructor</span> con3 <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredConstructor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>con3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//有了构造器以后我就可以创建对象：</span>\n        <span class=\"token class-name\">Object</span> o1 <span class=\"token operator\">=</span> con1<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>o1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Object</span> o2 <span class=\"token operator\">=</span> con2<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token number\">180.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170.6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>o2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"获取属性和对属性进行赋值\"><a class=\"markdownIt-Anchor\" href=\"#获取属性和对属性进行赋值\">#</a> 获取属性和对属性进行赋值</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test02</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">NoSuchFieldException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IllegalAccessException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InstantiationException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//获取运行时类的字节码信息：</span>\n        <span class=\"token class-name\">Class</span> cls <span class=\"token operator\">=</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取属性：</span>\n        <span class=\"token comment\">//getFields：获取运行时类和父类中被public修饰的属性</span>\n        <span class=\"token class-name\">Field</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> fields <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getFields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Field</span> f<span class=\"token operator\">:</span>fields<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"---------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//getDeclaredFields：获取运行时类中的所有属性</span>\n        <span class=\"token class-name\">Field</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> declaredFields <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredFields</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Field</span> f<span class=\"token operator\">:</span>declaredFields<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"---------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取指定的属性：</span>\n        <span class=\"token class-name\">Field</span> score <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"score\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>score<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Field</span> sno <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sno\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"---------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//属性的具体结构：</span>\n        <span class=\"token comment\">//获取修饰符</span>\n        <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span><span class=\"token keyword\">int</span> modifiers <span class=\"token operator\">=</span> sno<span class=\"token punctuation\">.</span><span class=\"token function\">getModifiers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>modifiers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Modifier</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>modifiers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\\<span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Modifier</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>sno<span class=\"token punctuation\">.</span><span class=\"token function\">getModifiers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取属性的数据类型：</span>\n        <span class=\"token class-name\">Class</span> clazz <span class=\"token operator\">=</span> sno<span class=\"token punctuation\">.</span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>clazz<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//获取属性的名字：</span>\n        <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> sno<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-------------------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//给属性赋值：(给属性设置值，必须要有对象)</span>\n        <span class=\"token class-name\">Field</span> sco <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"score\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Object</span> obj <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        sco<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span><span class=\"token number\">98</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//给obj这个对象的score属性设置具体的值，这个值为98</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"获取方法和调用方法\"><a class=\"markdownIt-Anchor\" href=\"#获取方法和调用方法\">#</a> 获取方法和调用方法</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test03</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">NoSuchMethodException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IllegalAccessException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InstantiationException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">InvocationTargetException</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//获取字节码信息：</span>\n        <span class=\"token class-name\">Class</span> cls <span class=\"token operator\">=</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取方法：</span>\n        <span class=\"token comment\">//getMethods:获取运行时类的方法还有所有父类中的方法（被public修饰）</span>\n        <span class=\"token class-name\">Method</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> methods <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getMethods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Method</span> m<span class=\"token operator\">:</span>methods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//getDeclaredMethods:获取运行时类中的所有方法：</span>\n        <span class=\"token class-name\">Method</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> declaredMethods <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredMethods</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Method</span> m<span class=\"token operator\">:</span>declaredMethods<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取指定的方法：</span>\n        <span class=\"token class-name\">Method</span> showInfo1 <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"showInfo\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>showInfo1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Method</span> showInfo2 <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"showInfo\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>showInfo2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Method</span> work <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getDeclaredMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"work\"</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>work<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-----------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取方法的具体结构：</span>\n        <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\n            @注解\n            修饰符 返回值类型 方法名<span class=\"token punctuation\">(</span>参数列表<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">XXXXX</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n        \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n            <span class=\"token comment\">//名字：</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>work<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//修饰符：</span>\n        <span class=\"token keyword\">int</span> modifiers <span class=\"token operator\">=</span> work<span class=\"token punctuation\">.</span><span class=\"token function\">getModifiers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Modifier</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span>modifiers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//返回值：</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>work<span class=\"token punctuation\">.</span><span class=\"token function\">getReturnType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//参数列表：</span>\n        <span class=\"token class-name\">Class</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> parameterTypes <span class=\"token operator\">=</span> work<span class=\"token punctuation\">.</span><span class=\"token function\">getParameterTypes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span> c<span class=\"token operator\">:</span>parameterTypes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token comment\">//获取注解：</span>\n        <span class=\"token class-name\">Method</span> myMethod <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getMethod</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myMethod\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Annotation</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> annotations <span class=\"token operator\">=</span> myMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Annotation</span> a<span class=\"token operator\">:</span>annotations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token comment\">//获取异常：</span>\n        <span class=\"token class-name\">Class</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> exceptionTypes <span class=\"token operator\">=</span> myMethod<span class=\"token punctuation\">.</span><span class=\"token function\">getExceptionTypes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span> c<span class=\"token operator\">:</span>exceptionTypes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n\n        <span class=\"token comment\">//调用方法：</span>\n        <span class=\"token class-name\">Object</span> o <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">newInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        myMethod<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//调用o对象的mymethod方法</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>showInfo2<span class=\"token punctuation\">.</span><span class=\"token function\">invoke</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token number\">45</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"获取类的接口所在包注解\"><a class=\"markdownIt-Anchor\" href=\"#获取类的接口所在包注解\">#</a> 获取类的接口，所在包，注解</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Test04</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//获取字节码信息：</span>\n        <span class=\"token class-name\">Class</span> cls <span class=\"token operator\">=</span> <span class=\"token class-name\">Student</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//获取运行时类的接口：</span>\n        <span class=\"token class-name\">Class</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> interfaces <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getInterfaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span> c<span class=\"token operator\">:</span>interfaces<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token comment\">//得到父类的接口：</span>\n        <span class=\"token comment\">//先得到父类的字节码信息：</span>\n        <span class=\"token class-name\">Class</span> superclass <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getSuperclass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//得到接口：</span>\n        <span class=\"token class-name\">Class</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> interfaces1 <span class=\"token operator\">=</span> superclass<span class=\"token punctuation\">.</span><span class=\"token function\">getInterfaces</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span> c<span class=\"token operator\">:</span>interfaces1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token comment\">//获取运行时类所在的包：</span>\n        <span class=\"token class-name\">Package</span> aPackage <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getPackage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>aPackage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>aPackage<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//获取运行类的注解：</span>\n        <span class=\"token class-name\">Annotation</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> annotations <span class=\"token operator\">=</span> cls<span class=\"token punctuation\">.</span><span class=\"token function\">getAnnotations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Annotation</span> a<span class=\"token operator\">:</span>annotations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"关于反射的面试题\"><a class=\"markdownIt-Anchor\" href=\"#关于反射的面试题\">#</a> 关于反射的面试题</h2>\n<p>【1】问题 1：创建 Person 的对象，以后用 new Person () 创建，还是用反射创建？</p>\n<p>【2】问题 2：反射是否破坏了面向对象的封装性？</p>\n","text":"# 通过案例体会反射的好处 案例：美团外卖 —&gt; 付款 —》要么用微信支付 要么用支付宝支付 //接口的制定方：美团外卖 public interface Mtwm &#123; //在线支付功能： void payOnline(); &#125; public class...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"反射","slug":"JavaSE/反射","count":1,"path":"api/categories/JavaSE/反射.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87%E6%A1%88%E4%BE%8B%E4%BD%93%E4%BC%9A%E5%8F%8D%E5%B0%84%E7%9A%84%E5%A5%BD%E5%A4%84\"><span class=\"toc-text\"> 通过案例体会反射的好处</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87%E6%A6%82%E5%BF%B5%E5%86%8D%E4%BD%93%E4%BC%9A%E5%8F%8D%E5%B0%84\"><span class=\"toc-text\"> 通过概念再体会反射</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%8F%90%E4%BE%9B%E4%B8%B0%E5%AF%8C%E7%9A%84%E7%B1%BB\"><span class=\"toc-text\"> 提供丰富的类</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E5%AD%97%E8%8A%82%E7%A0%81%E4%BF%A1%E6%81%AF%E7%9A%84%E5%9B%9B%E7%A7%8D%E5%BD%A2%E5%BC%8F\"><span class=\"toc-text\"> 获取字节码信息的四种形式</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E4%BB%A5%E4%BD%9C%E4%B8%BAclass%E7%B1%BB%E7%9A%84%E5%AE%9E%E4%BE%8B%E7%9A%84%E7%A7%8D%E7%B1%BB\"><span class=\"toc-text\"> 可以作为 Class 类的实例的种类</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E8%BF%90%E8%A1%8C%E6%97%B6%E7%B1%BB%E7%9A%84%E5%AE%8C%E6%95%B4%E7%BB%93%E6%9E%84\"><span class=\"toc-text\"> 获取运行时类的完整结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A1%A5%E5%85%85%E5%AE%8C%E5%96%84%E4%B8%8A%E9%9D%A2%E6%8F%90%E4%BE%9B%E7%9A%84%E4%B8%B0%E5%AF%8C%E7%9A%84%E7%B1%BB\"><span class=\"toc-text\"> 补充完善上面提供的丰富的类</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E6%9E%84%E9%80%A0%E5%99%A8%E5%92%8C%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1\"><span class=\"toc-text\"> 获取构造器和创建对象</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E5%B1%9E%E6%80%A7%E5%92%8C%E5%AF%B9%E5%B1%9E%E6%80%A7%E8%BF%9B%E8%A1%8C%E8%B5%8B%E5%80%BC\"><span class=\"toc-text\"> 获取属性和对属性进行赋值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E6%96%B9%E6%B3%95%E5%92%8C%E8%B0%83%E7%94%A8%E6%96%B9%E6%B3%95\"><span class=\"toc-text\"> 获取方法和调用方法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E7%B1%BB%E7%9A%84%E6%8E%A5%E5%8F%A3%E6%89%80%E5%9C%A8%E5%8C%85%E6%B3%A8%E8%A7%A3\"><span class=\"toc-text\"> 获取类的接口，所在包，注解</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E5%8F%8D%E5%B0%84%E7%9A%84%E9%9D%A2%E8%AF%95%E9%A2%98\"><span class=\"toc-text\"> 关于反射的面试题</span></a></li></ol></li></ol>","author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"第15章Junit注解_枚举","uid":"9d15e79fc8681384f7574570adfb152d","slug":"第15章Junit注解_枚举","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:10:49.422Z","comments":true,"path":"api/articles/第15章Junit注解_枚举.json","keywords":"java","cover":[],"text":"# 第 15 章_Junit_注解_枚举 # Junit 单元测试 # 引入 【1】软件测试的目的： 软件测试的目的是在规定的条件下对程序进行操作，以发现程序错误，衡量软件质量，并对其是否能满足设计要求进行评估的过程。 【2】测试分类： （1）黑盒测试： 软件的黑盒测试意味着测试...","link":"","photos":[],"count_time":{"symbolsCount":"21k","symbolsTime":"19 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"Junit注解_枚举","slug":"JavaSE/Junit注解-枚举","count":1,"path":"api/categories/JavaSE/Junit注解-枚举.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"第14章_网络编程","uid":"0ed879ee9bae9c3930e12cda3b50c3db","slug":"第14章_网络编程","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:10:07.853Z","comments":true,"path":"api/articles/第14章_网络编程.json","keywords":"java","cover":[],"text":"# 引入 【1】网络编程： 把分布在不同地理区域的计算机与专门的外部设备用通信线路互连成一个规模大、功能强的网络系统，从而使众多的计算机可以方便地互相传递信息、共享硬件、软件、数据信息等资源。 设备之间在网络中进行数据的传输，发送 / 接收数据。 【2】通信两个重要的要素：IP+...","link":"","photos":[],"count_time":{"symbolsCount":"28k","symbolsTime":"26 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"网络编程","slug":"JavaSE/网络编程","count":1,"path":"api/categories/JavaSE/网络编程.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}