{"title":"第2章_数据类型","uid":"40562668ed2ca56f9747a37e5490ff93","slug":"第2章_数据类型","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:06:15.226Z","comments":true,"path":"api/articles/第2章_数据类型.json","keywords":"java","cover":null,"content":"<h1 id=\"标识符\"><a class=\"markdownIt-Anchor\" href=\"#标识符\">#</a> 标识符</h1>\n<p><strong>【1】标识符：读音 biao zhi fu</strong></p>\n<p><strong>【2】什么是标识符？</strong></p>\n<p>包，类，变量，方法… 等等，只要是起名字的地方，那个<strong>名字</strong>就是标识符</p>\n<p><strong>【3】标识符定义规则：</strong></p>\n<p>1. 四个可以（组成部分）：数字，字母，下划线_，美元符号 $</p>\n<p>注意：字母概念比较宽泛，指的是英文字母，汉字，日语，俄语…</p>\n<p>但是我们一般起名字尽量使用英文字母</p>\n<p>2. 两个不可以：不可以以数字开头，不可以使用 java 中的关键字</p>\n<p>3. 见名知意：增加可读性</p>\n<p><strong>4. 大小写敏感</strong>： int a ; int A;</p>\n<p><strong>5. 遵照驼峰命名：</strong></p>\n<p>类名：首字母大写，其余遵循驼峰命名</p>\n<p>方法名，变量名：首字母小写，其余遵循驼峰命名</p>\n<p>包名：全部小写，不遵循驼峰命名</p>\n<p><strong>6. 长度无限制，但是不建议太长 asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasfd</strong></p>\n<h1 id=\"关键字\"><a class=\"markdownIt-Anchor\" href=\"#关键字\">#</a> 关键字</h1>\n<p>** 关键字：** 被 JAVA 语言赋予了特殊含义，用作专门用途的单词</p>\n<p>特点：JAVA 中所有关键字都为小写</p>\n<p>官网：<a href=\"https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html\">https://docs.oracle.com/javase/tutorial/java/nutsandbolts/_keywords.html</a></p>\n\n\n<h1 id=\"变量和常量\"><a class=\"markdownIt-Anchor\" href=\"#变量和常量\">#</a> 变量和常量</h1>\n<p>举例：</p>\n<p>丽丽的年龄：去年 17 岁，今年 18 岁，明年 19 岁</p>\n<p>年龄：17–》18—》19 --》值不断变化</p>\n<p>年龄 —》变量</p>\n<p>常量： 17 ， 18 ， 19 ----》 常量中的字面常量</p>\n<h2 id=\"字面常量\"><a class=\"markdownIt-Anchor\" href=\"#字面常量\">#</a> 字面常量</h2>\n<p><strong>常量分为两种：</strong></p>\n<p>常量通常指的是一个固定的值，例如：1、2、3、’a’、’b’、true、false、”helloWorld” 等。</p>\n<p>在 Java 语言中，主要是利用关键字 final 来定义一个常量。 常量一旦被初始化后不能再更改其值。</p>\n<p>为了更好的区分和表述，一般将 1、2、3、’a’、’b’、true、false、”helloWorld” 等称为字面常量，而使用 final 修饰的 PI 等称为符号常量（字符常量）。</p>\n<p><strong>字面常量的类型：</strong></p>\n\n<p>注意：逻辑常量就两个值，一个是 true，一个是 false</p>\n<h2 id=\"变量\"><a class=\"markdownIt-Anchor\" href=\"#变量\">#</a> 变量</h2>\n<p>变量本质上就是代表一个” 可操作的存储空间”，空间位置是确定的，但是里面放置什么值不确定。我们可通过变量名来访问 “对应的存储空间”，从而操纵这个 “存储空间” 存储的值。Java 是一种强类型语言，每个变量都必须声明其数据类型。变量的数据类型决定了变量占据存储空间的大小。 比如，int a=3; 表示 a 变量的空间大小为 4 个字节。变量作为程序中最基本的存储单元，其要素包括变量名，变量类型和作用域。变量在使用前必须对其声明，只有在变量声明以后，才能为其分配相应长度的存储空间。</p>\n<p>【1】变量声明格式：</p>\n<p>type varName [=value][,varName [=value]…]; //[ ] 中的内容为可选项，即可有可无</p>\n<p>数据类型 变量名 [= 初始值] [, 变量名 [= 初始值]…];</p>\n<p>案例：</p>\n<p>int age = 19 , age2 = 90 ;</p>\n<p>int age,age2;</p>\n<p>【2】变量的声明：</p>\n<p>（1）如果你只定义一个变量，没有给变量进行赋值的话，那么其实这个变量相当于没有定义：</p>\n\n<p>（2）变量如果没有进行赋值的话，那么使用的时候会出错，告诉你：尚未初始化变量：</p>\n\n<p>【3】变量的赋值：</p>\n\n<p>我们自己定义的时候直接就可以用一句话定义：</p>\n<p>int age = 10;</p>\n<p>变量的值可以更改：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestVar01</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//变量的声明（定义变量）（以年龄为案例讲解）</span>\n        <span class=\"token comment\">//java是一个强类型的语言，只要声明变量就必须定义类型：定义整数类型</span>\n        <span class=\"token keyword\">int</span> age <span class=\"token punctuation\">;</span> <span class=\"token comment\">//定义一个整数类型的变量，变量名字为age</span>\n        <span class=\"token comment\">//对变量进行赋值操作：</span>\n        age <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//变量名字为age，具体的值为10</span>\n        age <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n        age <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n        age <span class=\"token operator\">=</span> age <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n        age <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n        age <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>变量不可以重复定义：</p>\n\n<p>【4】变量的使用：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestVar01</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//变量的声明（定义变量）（以年龄为案例讲解）</span>\n        <span class=\"token comment\">//java是一个强类型的语言，只要声明变量就必须定义类型：定义整数类型</span>\n        <span class=\"token keyword\">int</span> age <span class=\"token punctuation\">;</span> <span class=\"token comment\">//定义一个整数类型的变量，变量名字为age</span>\n        <span class=\"token comment\">//对变量进行赋值操作：</span>\n        age <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//变量名字为age，具体的值为10</span>\n        age <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n        age <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n        age <span class=\"token operator\">=</span> age <span class=\"token operator\">+</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n        age <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n        age <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>age<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>age<span class=\"token operator\">+</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> age <span class=\"token operator\">+</span> <span class=\"token number\">66</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>扩展：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestVar02</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> b <span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>现在对上述代码进行 “反编译过程”“反汇编过程”</p>\n\n\n<p>【5】变量的内存：</p>\n\n<p>【6】习题：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestVar03</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n        num1 <span class=\"token operator\">=</span> num2<span class=\"token punctuation\">;</span>\n        num2 <span class=\"token operator\">=</span> num2 <span class=\"token operator\">+</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        num1 <span class=\"token operator\">=</span> num2 <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        num2 <span class=\"token operator\">=</span> num1<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"num1=\"</span><span class=\"token operator\">+</span>num1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"num2=\"</span><span class=\"token operator\">+</span>num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>内存分析：</p>\n\n<p>结果：</p>\n\n<p>【7】变量的作用域：</p>\n<p>作用域指的就是作用范围，变量在什么范围中有效</p>\n<p>作用范围就是离它最近的 {}</p>\n<p>备注：一会我们写的代码，不要去运行，会出错</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\n    局部变量：定义在方法中\n    成员变量：定义在类中，方法外\n    \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestVar04</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> b <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//no</span>\n        <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//yes</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//yes</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">int</span> c <span class=\"token operator\">=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//yes</span>\n            <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//属于变量的重复定义</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//no</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">eat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//yes</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//no</span>\n        <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//不是变量的重复定义</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//yes</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"基本数据类型\"><a class=\"markdownIt-Anchor\" href=\"#基本数据类型\">#</a> 基本数据类型</h1>\n<p>Java 是一种强类型语言，每个变量都必须声明其数据类型。</p>\n<p>Java 的数据类型可分为两大类：基本数据类型（primitive data type）和引用数据类型（reference data type）。</p>\n\n<p>PS: 巧妙记忆：除了基本数据类型以外的所有类型都属于引用数据类型，本章重点：基本数据类型</p>\n<h2 id=\"整数类型\"><a class=\"markdownIt-Anchor\" href=\"#整数类型\">#</a> 整数类型</h2>\n<h3 id=\"整数类型常量\"><a class=\"markdownIt-Anchor\" href=\"#整数类型常量\">#</a> 整数类型常量</h3>\n<p>十进制整数，如：99, -500, 0</p>\n<p>八进制整数，要求以 0 开头，如：015</p>\n<p>十六进制数，要求 0x 或 0X 开头，如：0x15</p>\n<p>二进制：要求 0b 或者 0B 开头，如：0b11</p>\n<p>几进制：就是逢几进 1 的问题：</p>\n<p>平时实际生活中用的最多的是：十进制</p>\n<p>计算机用二进制最多</p>\n\n<p>扩展：进制转换问题</p>\n<p>【1】二进制转换为十进制：</p>\n<p>二进制： 1101</p>\n<p>1*2^3 + 1*2^2 + 0*2^1 + 1*2^0</p>\n<p>= 8 + 4 + 0 + 1</p>\n<p>= 13</p>\n<p>【2】十进制转换为二进制：</p>\n<p>十进制 13</p>\n\n<p>【3】八进制转换十进制：</p>\n<p>八进制： 16</p>\n<p>1*8^1 + 6*8^0</p>\n<p>= 8 + 6</p>\n<p>=14</p>\n<p>【4】十进制转换为八进制：</p>\n<p>十进制 14：</p>\n\n<p>【5】八进制转换为十六进制：</p>\n<p>把十进制当做一个中转站：</p>\n<p>八进制 —》十进制 —》十六进制</p>\n<p>实际上根本不用自己转换这么麻烦：我们可以直接用系统中提供给我们的计算器：</p>\n\n<h3 id=\"整数类型变量\"><a class=\"markdownIt-Anchor\" href=\"#整数类型变量\">#</a> 整数类型变量</h3>\n<p><strong>整型数据类型：</strong></p>\n\n<p>比如：byte 的右侧表数范围 127 怎么算出来的？</p>\n<p>byte: 1 字节 = 8 位</p>\n<p>二进制：01111111</p>\n<p>1*2^6 + 1*2^5 + 1*2^4 + 1*2^3 + 1*2^2 + 1*2^1 + 1*2^0</p>\n<p>= 64 + 32 + 16 +8 +4 + 2 +1</p>\n<p>= 127</p>\n<p>代码：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestVar05</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//定义整数类型的变量：</span>\n        <span class=\"token comment\">//给变量赋值的时候，值可以为不同进制的：</span>\n        <span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">12</span> <span class=\"token punctuation\">;</span><span class=\"token comment\">//默认情况下赋值就是十进制的情况</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">012</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//前面加上0，这个值就是八进制的</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num3 <span class=\"token operator\">=</span> <span class=\"token number\">0x12</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//前面加上0x或者0X，这个值就是十六进制的</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num4 <span class=\"token operator\">=</span> <span class=\"token number\">0b10</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//前面加上0b或者0B,这个值就是二进制的</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">//定义byte类型的变量：</span>\n        <span class=\"token keyword\">byte</span> b <span class=\"token operator\">=</span> <span class=\"token number\">126</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//定义了一个byte类型的变量，名字叫b，赋值为12</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//注意：超范围的赋值会报错。</span>\n        <span class=\"token keyword\">short</span> s <span class=\"token operator\">=</span> <span class=\"token number\">30000</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1234</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//整数类型默认就是int类型的，所以12345678910是一个int类型的数，对于int类型来说，它超出范围了</span>\n        <span class=\"token comment\">//要想把一个数给long类型变量，那么后面加上L(推荐)或者l就可以了</span>\n        <span class=\"token keyword\">long</span> num5 <span class=\"token operator\">=</span> <span class=\"token number\">12345678910L</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//注意：只有这个数超出int类型的范围了后面才需要加上L，否则无需加L也可以赋值给long类型：</span>\n        <span class=\"token keyword\">long</span> num6 <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"浮点类型\"><a class=\"markdownIt-Anchor\" href=\"#浮点类型\">#</a> 浮点类型</h2>\n<h3 id=\"浮点类型常量\"><a class=\"markdownIt-Anchor\" href=\"#浮点类型常量\">#</a> 浮点类型常量</h3>\n<p>（1）十进制数形式，例如:</p>\n<p>3.14 314.0 0.314</p>\n<p>（2）科学记数法形式，如</p>\n<p>314e2 314E2 (E 的大小写没有区分) 314E-2</p>\n<p>double f = 314e2; //314*10^2–&gt;31400.0</p>\n<p>double f2 = 314e-2; //314*10^(-2)–&gt;3.14</p>\n<h3 id=\"浮点类型变量\"><a class=\"markdownIt-Anchor\" href=\"#浮点类型变量\">#</a> 浮点类型变量</h3>\n<p>float 类型又被称作单精度类型，尾数可以精确到 7 位有效数字，在很多情况下，float 类型的精度很难满足需求。</p>\n<p>而 double 表示这种类型的数值精度约是 float 类型的两倍，又被称作双精度类型，绝大部分应用程序都采用 double 类型。</p>\n<p>float 类型的数值有一个后缀 F 或者 f ，没有后缀 F/f 的浮点数值默认为 double 类型。</p>\n<p>也可以在浮点数值后添加后缀 D 或者 d， 以明确其为 double 类型。</p>\n\n<p>PS：有效数字指的是从左开始第一个不为 0 的数到最后一个数</p>\n<p>代码：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestVar06</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//浮点类型的常量有两种形式：</span>\n        <span class=\"token comment\">//十进制形式：</span>\n        <span class=\"token keyword\">double</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">3.14</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//科学计数法形式：</span>\n        <span class=\"token keyword\">double</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">314E-2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">//浮点类型的变量：</span>\n        <span class=\"token comment\">//注意：浮点型默认是double类型的，要想将一个double类型的数赋给float类型，必须后面加上F或者f</span>\n        <span class=\"token keyword\">float</span> f1 <span class=\"token operator\">=</span> <span class=\"token number\">3.14234567898623F</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>f1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//注意：double类型后面可以加D或者d，但是一般我们都省略不写</span>\n        <span class=\"token keyword\">double</span> d1 <span class=\"token operator\">=</span> <span class=\"token number\">3.14234567898623D</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>d1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">//注意：我们最好不要进行浮点类型的比较：</span>\n        <span class=\"token keyword\">float</span> f2 <span class=\"token operator\">=</span> <span class=\"token number\">0.3F</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> d2 <span class=\"token operator\">=</span> <span class=\"token number\">0.3</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>f2<span class=\"token operator\">==</span>d2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\n            区别：\n            <span class=\"token operator\">=</span> 赋值运算： 将等号右侧的值赋给等号左侧\n            <span class=\"token operator\">==</span> 判断<span class=\"token operator\">==</span>左右两侧的值是否相等 ：结果要么相等 要么不相等\n            <span class=\"token operator\">==</span>运算符的结果就是要么是<span class=\"token boolean\">true</span>，要么是<span class=\"token boolean\">false</span>\n            \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n            \n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"字符类型\"><a class=\"markdownIt-Anchor\" href=\"#字符类型\">#</a> 字符类型</h2>\n<p>【1】Java 中使用单引号来表示字符常量，字符型在内存中占 2 个字节。</p>\n<p>char 类型用来表示在 Unicode 编码表中的字符。Unicode 编码被设计用来处理各种语言的文字，它占 2 个字节，可允许有 65536 个字符。</p>\n<p>【2】转义字符：</p>\n\n<p>【3】ASCII 表：</p>\n\n<p>【4】Unicode 编码表：</p>\n<p><a href=\"https://www.cnblogs.com/csguo/p/7401874.html\">https://www.cnblogs.com/csguo/p/7401874.html</a></p>\n<p>代码 1：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestVar07</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//定义字符类型的变量：</span>\n        <span class=\"token keyword\">char</span> ch1 <span class=\"token operator\">=</span> <span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ch1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">char</span> ch2 <span class=\"token operator\">=</span> <span class=\"token char\">'A'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ch2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">char</span> ch3 <span class=\"token operator\">=</span> <span class=\"token char\">'4'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ch3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">char</span> ch4 <span class=\"token operator\">=</span> <span class=\"token char\">'中'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ch4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">char</span> ch5 <span class=\"token operator\">=</span> <span class=\"token char\">'?'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ch5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//java中无论：字母，数字，符号，中文都是字符类型的常量，都占用2个字节。</span>\n        <span class=\"token keyword\">char</span> ch6 <span class=\"token operator\">=</span> <span class=\"token char\">' '</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ch6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//字符类型：单引号引起来的单个字符</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"--------------------------------\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\n            转义字符：\n            \\\\将后面的普通字符转换为特殊含义\n            \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n            <span class=\"token keyword\">char</span> ch7 <span class=\"token operator\">=</span> <span class=\"token char\">'\\\\n'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aaa\"</span><span class=\"token operator\">+</span>ch7<span class=\"token operator\">+</span><span class=\"token string\">\"bbb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aaa\\\\nbbb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// \\\\n 换行</span>\n        \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aaaaaaa\\\\tbbb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// \\\\t 制表符</span>\n        \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aaa\\\\bbbb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//aabbb \\\\b 向前退一格</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"aaa\\\\rbbb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//bbb \\\\r 将光标到本行开头 ：回车</span>\n        \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\\\\"</span>java\\\\\"<span class=\"token string\">\"); // \\\\\"</span> 将双引号原样输出 \\\\' 将单引号原样输出 \\\\\\\\ 将\\\\原样输出\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>代码 2：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestVar08</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">char</span> ch1 <span class=\"token operator\">=</span> <span class=\"token char\">'A'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ch1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//A</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ch1<span class=\"token operator\">+</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//155</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">155</span><span class=\"token operator\">-</span>ch1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//90</span>\n        <span class=\"token comment\">//char类型我们看到的样子就是它本身的字面常量,但是底层在进行计算的时候，实际上是按照一个码进行计算的。</span>\n        <span class=\"token comment\">//这个码就是ASCII</span>\n        <span class=\"token comment\">//之前说char类型是按照Unicode码表进行存储的 (Unicode兼容了ASCII码，Unicode的前128位置ASCII)</span>\n        \n        <span class=\"token keyword\">char</span> ch2 <span class=\"token operator\">=</span> <span class=\"token char\">'中'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ch2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 中</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ch2<span class=\"token operator\">+</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 20103</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">20103</span><span class=\"token operator\">-</span>ch2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 90</span>\n        \n        <span class=\"token comment\">//转换：</span>\n        <span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span>ch2<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//20013</span>\n        \n        <span class=\"token keyword\">char</span> ch <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">char</span><span class=\"token punctuation\">)</span><span class=\"token number\">20013</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> <span class=\"token char\">'中'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">char</span> ch5 <span class=\"token operator\">=</span> <span class=\"token number\">20013</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ch5<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">//面试题：</span>\n        <span class=\"token keyword\">char</span> ch6 <span class=\"token operator\">=</span> <span class=\"token char\">'2'</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>ch6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//'4'---\\>4</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"编码和字符集\"><a class=\"markdownIt-Anchor\" href=\"#编码和字符集\">#</a> 编码和字符集</h3>\n<p>【1】什么是编码？</p>\n\n<p>【2】通过生活案例：</p>\n\n<p>【3】由权威机构形成的编码表才可以称之为：字符集</p>\n<ul>\n<li>ASCII</li>\n</ul>\n<p>英文字符集</p>\n<p>用一个字节的 7 位表示</p>\n<ul>\n<li>IOS8859-1</li>\n</ul>\n<p>西欧字符集</p>\n<p>用一个字节的 8 位表示</p>\n<ul>\n<li>GB2312</li>\n</ul>\n<p>简体中文字符集</p>\n<p>最多使用两个字节编码</p>\n<p>PS：中文：2 个字节</p>\n<p>GB2312 兼容了 ASCII 中的字符：</p>\n<ul>\n<li>GBK</li>\n</ul>\n<p>GB2312 的升级，加入了繁体字</p>\n<p>最多使用两个字节编码</p>\n<p>疑问：</p>\n\n<p>首位如果是 0：一个字节代码代表一个字符</p>\n<p>首位如果是 1：那么一个字节不够，要加上后面的字节才能完整的表示一个字符。</p>\n<ul>\n<li>Unicode</li>\n</ul>\n<p>国际通用字符集，融合了目前人类使用的所有字符。为每个字符分配唯一的字符码。</p>\n<p>退出了 UTF 标准：</p>\n<p>三种编码方案： UTF-8，UTF-16,UTF-32</p>\n<p>以 UTF-8 为案例讲解：</p>\n<p>中文： 珊 —》Unicode ： 29642</p>\n\n\n<p>底层存储：</p>\n\n<p>UTF-8 标准最多可以用 6 个字节表示：</p>\n\n<p>以后我们用的最多的就是 UTF-8.</p>\n<h3 id=\"解释乱码问题\"><a class=\"markdownIt-Anchor\" href=\"#解释乱码问题\">#</a> 解释乱码问题</h3>\n\n<p>用记事本选择编码方法的时候一般要选择为 ANSI—》获取当前操作系统的编码格式：GBK</p>\n<h2 id=\"布尔类型\"><a class=\"markdownIt-Anchor\" href=\"#布尔类型\">#</a> 布尔类型</h2>\n<p>boolean 类型有两个常量值，true 和 false，在内存中占一位（不是一个字节），不可以使用 0 或非 0 的整数替代 true 和 false ，这点和 C 语言不同。 boolean 类型用来判断逻辑条件，一般用于程序流程控制 。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestVar09</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//创建一个布尔类型的变量：</span>\n        <span class=\"token keyword\">boolean</span> flag1 <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>flag1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> flag2 <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>flag2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> flag3 <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token operator\">==</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>flag3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> flag4 <span class=\"token operator\">=</span> <span class=\"token number\">5</span>\\<span class=\"token operator\">&lt;</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>flag4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"基本数据类型的转换\"><a class=\"markdownIt-Anchor\" href=\"#基本数据类型的转换\">#</a> 基本数据类型的转换</h2>\n<p>【1】什么是类型转换：</p>\n<p>在赋值运算或者算数运算的时候，要求数据类型一致，就要进行类型的转换。</p>\n<p>【2】类型转换的种类：</p>\n<p>自动转换，强制转换</p>\n<p>【3】内存演示：</p>\n\n<p>【4】代码：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestVar10</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//类型转换的两种形式：</span>\n        <span class=\"token keyword\">double</span> d <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//int--\\>double 自动类型转换</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token number\">6.5</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//double---\\>int 强制类型转换 （强转）</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">//在同一个表达式中，有多个数据类型的时候，应该如何处理：</span>\n        <span class=\"token comment\">//多种数据类型参与运算的时候，整数类型，浮点类型，字符类型都可以参与运算，唯独布尔类型不可以参与运算。</span>\n        <span class=\"token comment\">//double d2 = 12+1294L+8.5F+3.81+'a'+true;</span>\n        <span class=\"token keyword\">double</span> d2 <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token operator\">+</span><span class=\"token number\">1294L</span><span class=\"token operator\">+</span><span class=\"token number\">8.5F</span><span class=\"token operator\">+</span><span class=\"token number\">3.81</span><span class=\"token operator\">+</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>d2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\n            类型级别：<span class=\"token punctuation\">(</span>从低到高的<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">byte</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">short</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">char</span><span class=\"token operator\">--</span>\\<span class=\"token operator\">></span><span class=\"token keyword\">int</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\\<span class=\"token operator\">></span><span class=\"token keyword\">long</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\\<span class=\"token operator\">></span><span class=\"token keyword\">float</span><span class=\"token operator\">--</span><span class=\"token operator\">-</span>\\<span class=\"token operator\">></span><span class=\"token keyword\">double</span>\n            级别用来做什么？当一个表达式中有多种数据类型的时候，要找出当前表达式中级别最高的那个类型，然后\n            其余的类型都转换为当前表达式中级别最高的类型进行计算。\n            <span class=\"token keyword\">double</span> d2 <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token operator\">+</span><span class=\"token number\">1294L</span><span class=\"token operator\">+</span><span class=\"token number\">8.5F</span><span class=\"token operator\">+</span><span class=\"token number\">3.81</span><span class=\"token operator\">+</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">=</span> <span class=\"token number\">12.0</span><span class=\"token operator\">+</span><span class=\"token number\">1294.0</span><span class=\"token operator\">+</span><span class=\"token number\">8.5</span><span class=\"token operator\">+</span><span class=\"token number\">3.81</span><span class=\"token operator\">+</span><span class=\"token number\">97.0</span>\n            \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n            <span class=\"token keyword\">int</span> i2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token operator\">+</span><span class=\"token number\">1294L</span><span class=\"token operator\">+</span><span class=\"token number\">8.5F</span><span class=\"token operator\">+</span><span class=\"token number\">3.81</span><span class=\"token operator\">+</span><span class=\"token char\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\n            在进行运算的时候：\n            左<span class=\"token operator\">=</span>右 <span class=\"token operator\">:</span> 直接赋值\n                左\\<span class=\"token operator\">&lt;</span>右 ：强转\n                左\\<span class=\"token operator\">></span>右 ：直接自动转换\n                \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n                \n                <span class=\"token comment\">//以下情况属于特殊情形：对于byte，short，char类型来说，只要在他们的表数范围中，赋值的时候就不需要进行</span>\n                <span class=\"token comment\">//强转了直接赋值即可。</span>\n                <span class=\"token keyword\">byte</span> b <span class=\"token operator\">=</span> <span class=\"token number\">12</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">byte</span> b2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span><span class=\"token number\">270</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>b2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        \n        \n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"练习final字符常量scanner的使用\"><a class=\"markdownIt-Anchor\" href=\"#练习final字符常量scanner的使用\">#</a> 练习：final，字符常量，Scanner 的使用</h2>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span><span class=\"token comment\">//形象理解：在java.util下将Scanner拿过来用</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestVar11</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//实现功能：求圆的周长和面积</span>\n        <span class=\"token comment\">//【1】提取变量：提取变量，就是为了一劳永逸，以后只要改变变量的值，下面只要用到这个变量的地方，取值也都发生变化了</span>\n        <span class=\"token comment\">//【2】一个变量被final修饰，这个变量就变成了一个常量，这个常量的值就不可变了</span>\n        <span class=\"token comment\">// 这个常量就是我们所说的 字符常量 ---》pi</span>\n        <span class=\"token comment\">// 约定俗成的规定：字符常量的名字全部大写</span>\n        <span class=\"token comment\">//【3】使用扫描器：Scanner的使用--》注意通过形象的理解去使用</span>\n        <span class=\"token keyword\">final</span> <span class=\"token keyword\">double</span> <span class=\"token constant\">PI</span> <span class=\"token operator\">=</span> <span class=\"token number\">3.14</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//拿来一个扫描器：</span>\n        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//给一个友好性的提示：</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请录入一个半径：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//让扫描器扫描键盘录入的int类型的数据：</span>\n        <span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">//求周长：</span>\n        <span class=\"token keyword\">double</span> c <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\\<span class=\"token operator\">*</span><span class=\"token constant\">PI</span>\\<span class=\"token operator\">*</span>r<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"周长为：\"</span><span class=\"token operator\">+</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">//求面积：</span>\n        <span class=\"token comment\">//PI = 9.29;报错：TestVar11.java:12: 错误: 无法为最终变量pi分配值</span>\n        <span class=\"token keyword\">double</span> s <span class=\"token operator\">=</span> <span class=\"token constant\">PI</span>\\<span class=\"token operator\">*</span>r\\<span class=\"token operator\">*</span>r<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"面积为：\"</span><span class=\"token operator\">+</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        \n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"练习加深对scanner的使用\"><a class=\"markdownIt-Anchor\" href=\"#练习加深对scanner的使用\">#</a> 练习：加深对 Scanner 的使用</h2>\n\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestVar12</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//键盘录入学生的信息：年龄，身高，姓名，性别：</span>\n        <span class=\"token comment\">//键盘录入年龄：(接收int类型数据)</span>\n        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请录入年龄：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> age <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//键盘录入身高：（接收double类型数据）</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请录入身高：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">double</span> height <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//键盘录入姓名：(接收String类型数据--》字符串)</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请录入姓名：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> name <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//键盘录入性别：(接受char类型)</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请录入性别：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">String</span> sexStr <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">char</span> sex <span class=\"token operator\">=</span> sexStr<span class=\"token punctuation\">.</span><span class=\"token function\">charAt</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//上面两句可以合为一句表示：char sex = sc.next().charAt(0);</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"该学生的信息为:姓名是：\"</span><span class=\"token operator\">+</span>name<span class=\"token operator\">+</span><span class=\"token string\">\",年龄是：\"</span><span class=\"token operator\">+</span>age<span class=\"token operator\">+</span><span class=\"token string\">\",身高为：\"</span><span class=\"token operator\">+</span>height<span class=\"token operator\">+</span><span class=\"token string\">\",性别是：\"</span><span class=\"token operator\">+</span>sex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","text":"# 标识符 【1】标识符：读音 biao zhi fu 【2】什么是标识符？ 包，类，变量，方法… 等等，只要是起名字的地方，那个名字就是标识符 【3】标识符定义规则： 1. 四个可以（组成部分）：数字，字母，下划线_，美元符号 $ 注意：字母概念比较宽泛，指的是英文字母，汉字，...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"数据类型","slug":"JavaSE/数据类型","count":1,"path":"api/categories/JavaSE/数据类型.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%A0%87%E8%AF%86%E7%AC%A6\"><span class=\"toc-text\"> 标识符</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\"> 关键字</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E5%92%8C%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\"> 变量和常量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E9%9D%A2%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\"> 字面常量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F\"><span class=\"toc-text\"> 变量</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\"> 基本数据类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B4%E6%95%B0%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\"> 整数类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B4%E6%95%B0%E7%B1%BB%E5%9E%8B%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\"> 整数类型常量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B4%E6%95%B0%E7%B1%BB%E5%9E%8B%E5%8F%98%E9%87%8F\"><span class=\"toc-text\"> 整数类型变量</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%AE%E7%82%B9%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\"> 浮点类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%AE%E7%82%B9%E7%B1%BB%E5%9E%8B%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\"> 浮点类型常量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%AE%E7%82%B9%E7%B1%BB%E5%9E%8B%E5%8F%98%E9%87%8F\"><span class=\"toc-text\"> 浮点类型变量</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\"> 字符类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E7%A0%81%E5%92%8C%E5%AD%97%E7%AC%A6%E9%9B%86\"><span class=\"toc-text\"> 编码和字符集</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%87%8A%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98\"><span class=\"toc-text\"> 解释乱码问题</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%83%E5%B0%94%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\"> 布尔类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E7%9A%84%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\"> 基本数据类型的转换</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%83%E4%B9%A0final%E5%AD%97%E7%AC%A6%E5%B8%B8%E9%87%8Fscanner%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\"> 练习：final，字符常量，Scanner 的使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%83%E4%B9%A0%E5%8A%A0%E6%B7%B1%E5%AF%B9scanner%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\"> 练习：加深对 Scanner 的使用</span></a></li></ol></li></ol>","author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"第1章初识JAVA","uid":"9a615c2cbfa580b4a365b136d5081085","slug":"第1章初识JAVA","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:06:12.334Z","comments":true,"path":"api/articles/第1章初识JAVA.json","keywords":"java","cover":[],"text":"# 计算机语言的发展历史 计算机编程语言的发展，是随着计算机本身硬件发展而发展的。硬件速度越快、体积越小、成本越低，应用到人类社会的场景就会越多，那么所需要的算法就会越复杂，也就要求计算机编程语言越高级。最初重达几十吨但一秒只能运算 5000 次的 ENIAC (世界上第一台计算...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"JAVA简介","slug":"JavaSE/JAVA简介","count":1,"path":"api/categories/JavaSE/JAVA简介.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"第3章_运算符","uid":"660e7e650553bed7272bd20db06da01d","slug":"第3章_运算符","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:05:46.693Z","comments":true,"path":"api/articles/第3章_运算符.json","keywords":"java","cover":null,"text":"# Java 中的运算符 【1】Java 语言支持如下运算符： 算术运算符 +，-，*，/，%，++（自增），–（自减） 赋值运算符 = 扩展赋值运算符 +=，-=，*=，/= 关系运算符 &gt;，&lt;，&gt;=，&lt;=，==，!= 逻辑运算符 &amp;，|， &a...","link":"","photos":[],"count_time":{"symbolsCount":"9.5k","symbolsTime":"9 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"运算符","slug":"JavaSE/运算符","count":1,"path":"api/categories/JavaSE/运算符.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}