{"title":"第3章_运算符","uid":"660e7e650553bed7272bd20db06da01d","slug":"第3章_运算符","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:05:46.693Z","comments":true,"path":"api/articles/第3章_运算符.json","keywords":"java","cover":null,"content":"<h1 id=\"java中的运算符\"><a class=\"markdownIt-Anchor\" href=\"#java中的运算符\">#</a> Java 中的运算符</h1>\n<p>【1】Java 语言支持如下运算符：</p>\n<ul>\n<li>算术运算符</li>\n</ul>\n<p>+，-，*，/，%，++（自增），–（自减）</p>\n<ul>\n<li>赋值运算符</li>\n</ul>\n<p>=</p>\n<ul>\n<li>扩展赋值运算符</li>\n</ul>\n<p>+=，-=，*=，/=</p>\n<ul>\n<li>关系运算符</li>\n</ul>\n<p>&gt;，&lt;，&gt;=，&lt;=，==，!=</p>\n<ul>\n<li>逻辑运算符</li>\n</ul>\n<p>&amp;，|， &amp;&amp;，||，!，^</p>\n<ul>\n<li>位运算符</li>\n</ul>\n<p>&amp;，|，^，~ ， &gt;&gt;，&lt;&lt;，&gt;&gt;&gt; (了解！！！)</p>\n<ul>\n<li>条件运算符</li>\n</ul>\n<p>？：</p>\n<p>【2】相关概念辨析</p>\n<p>+ 运算符 操作符 Operator</p>\n<p>5+6 表达式 expression</p>\n<p>5 6 操作数 Operand</p>\n<p>int m =5+6; 语句 Sentence</p>\n<h1 id=\"算术运算符\"><a class=\"markdownIt-Anchor\" href=\"#算术运算符\">#</a> 算术运算符</h1>\n<h2 id=\"和\"><a class=\"markdownIt-Anchor\" href=\"#和\">#</a> / 和 %</h2>\n<p>【1】/ 除法运算符 ： 表示两个数相除运算</p>\n<p>% 取余运算符： 用来求余数的</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestOpe01</span><span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\n        <span class=\"token comment\">//打印结果：</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token operator\">/</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token operator\">%</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token operator\">/</span><span class=\"token number\">3.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token operator\">%</span><span class=\"token number\">5.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>【2】练习：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestOpe02</span><span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\n        <span class=\"token comment\">//实现功能：任意给出一个四位数，求出每位上的数字并输出</span>\n\n        \n\n        <span class=\"token comment\">//1.任意给出一个四位数：</span>\n\n        <span class=\"token class-name\">Scanner</span> input <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请录入一个四位数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> input<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        \n\n        \n\n        <span class=\"token comment\">//2.求出每位上的数字：</span>\n\n        <span class=\"token comment\">//个位数：</span>\n\n        <span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> num<span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//十位数：</span>\n\n        <span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> num<span class=\"token operator\">/</span><span class=\"token number\">10</span><span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//1234---\\>123---\\>3</span>\n\n        <span class=\"token comment\">//百位数：</span>\n\n        <span class=\"token keyword\">int</span> num3 <span class=\"token operator\">=</span> num<span class=\"token operator\">/</span><span class=\"token number\">100</span><span class=\"token operator\">%</span><span class=\"token number\">10</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//1234---\\>12---\\>2</span>\n\n        <span class=\"token comment\">//千位数：</span>\n\n        <span class=\"token keyword\">int</span> num4 <span class=\"token operator\">=</span> num<span class=\"token operator\">/</span><span class=\"token number\">1000</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//1234---\\>1</span>\n\n        \n\n        \n\n        <span class=\"token comment\">//3.输出每位上的数字：</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"个位上的数为：\"</span><span class=\"token operator\">+</span>num1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"十位上的数为：\"</span><span class=\"token operator\">+</span>num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"百位上的数为：\"</span><span class=\"token operator\">+</span>num3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"千位上的数为：\"</span><span class=\"token operator\">+</span>num4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n\n    \n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"\"><a class=\"markdownIt-Anchor\" href=\"#\">#</a> +</h2>\n<p>【1】+ 的作用：</p>\n<p>（1）表示正数</p>\n<p>（2）表示相加操作</p>\n<p>（3）进行字符串的拼接</p>\n<p>【2】代码练习：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestOpe03</span><span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\n        <span class=\"token comment\">//表示正数：</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//5</span>\n\n        <span class=\"token comment\">//相加操作：</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//11</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token operator\">+</span><span class=\"token char\">'6'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//59</span>\n\n        <span class=\"token comment\">//字符串的拼接：</span>\n\n        <span class=\"token comment\">//规则：+左右两侧的任意一侧有字符串，那么这个加号就是字符串拼接的作用，结果一定是字符串</span>\n\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">56</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"num=\"</span><span class=\"token operator\">+</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//\"num=56\" ---\\> num=56</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token operator\">+</span><span class=\"token string\">\"7\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//11+\"7\"---\\>\"117\" ---\\>117</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token operator\">+</span><span class=\"token char\">'6'</span><span class=\"token operator\">+</span><span class=\"token string\">\"7\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//59 +\"7\"---\\>\"597\" ---\\>597</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"5\"</span><span class=\"token operator\">+</span><span class=\"token number\">6</span><span class=\"token operator\">+</span><span class=\"token string\">\"7\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//\"56\"+\"7\" ---\\>\"567\"---\\>567</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"5\"</span><span class=\"token operator\">+</span><span class=\"token char\">'6'</span><span class=\"token operator\">+</span><span class=\"token string\">\"7\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//\"56\"+\"7\"---\\>\"567\"---\\>567</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"5\"</span><span class=\"token operator\">+</span><span class=\"token char\">'6'</span><span class=\"token operator\">+</span><span class=\"token char\">'7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//\"56\"+'7'---\\>\"567\"---567</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"-2\"><a class=\"markdownIt-Anchor\" href=\"#-2\">#</a> ++</h2>\n<p>【1】++：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestOpe04</span><span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\n        <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n        a<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//理解为：相当于 a=a+1 操作</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//6</span>\n\n        \n\n        a <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n        \\<span class=\"token operator\">++</span>a<span class=\"token punctuation\">;</span><span class=\"token comment\">//理解为：相当于 a=a+1 操作</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//6</span>\n\n        \n\n        <span class=\"token comment\">//总结：++单独使用的时候，无论放在前还是后，都是加1操作</span>\n\n        \n\n        <span class=\"token comment\">//将++参与到运算中：</span>\n\n        <span class=\"token comment\">//规则：看++在前还是在后，如果++在后：先运算，后加1 如果++在前，先加1，后运算</span>\n\n        a <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">int</span> m <span class=\"token operator\">=</span> a<span class=\"token operator\">++</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//先运算 m=a+7 再加1： a = a+1</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//12</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//6</span>\n\n        \n\n        a <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">int</span> n <span class=\"token operator\">=</span> <span class=\"token operator\">++</span>a <span class=\"token operator\">+</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//先加1 a=a+1 再运算： n = a+7</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//13</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//6</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>无论这个变量是否参与到运算中去，只要用 ++ 运算符，这个变量本身就加 1 操作</p>\n<p>只是说如果变量参与到运算中去的话，对运算结果是产生影响：</p>\n<p>看<ins>在前还是在后，如果</ins>在后：先运算，后加 1 如果 ++ 在前，先加 1，后运算</p>\n<p>【2】练习：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestOpe05</span><span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n\n        <span class=\"token keyword\">int</span> a <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">++</span> <span class=\"token operator\">+</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">++</span> <span class=\"token operator\">+</span> <span class=\"token operator\">++</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>a <span class=\"token operator\">+</span> a<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>a <span class=\"token operator\">+</span> <span class=\"token operator\">++</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>运算过程：</p>\n\n<h1 id=\"赋值运算符\"><a class=\"markdownIt-Anchor\" href=\"#赋值运算符\">#</a> 赋值运算符</h1>\n<p>【1】= 的作用： 将等号右侧的值赋给等号左侧：</p>\n<p>int age = 19;</p>\n<p>int age = 10+3+8;</p>\n<p>【2】练习：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestOpe06</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//任意给出两个数，交换两个数并输出：</span>\n        <span class=\"token comment\">//1.给出两个数：</span>\n        <span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">//2.输出交换前的两个数：</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"交换前：\"</span><span class=\"token operator\">+</span>num1<span class=\"token operator\">+</span><span class=\"token string\">\"\\\\t\"</span><span class=\"token operator\">+</span>num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">//3.交换</span>\n        <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\n            错误代码：\n            num1 <span class=\"token operator\">=</span> num2<span class=\"token punctuation\">;</span>\n        num2 <span class=\"token operator\">=</span> num1<span class=\"token punctuation\">;</span>\n        \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n            <span class=\"token comment\">//解决办法：</span>\n            <span class=\"token comment\">//引入一个中间变量:</span>\n            <span class=\"token keyword\">int</span> t<span class=\"token punctuation\">;</span>\n        t <span class=\"token operator\">=</span> num1<span class=\"token punctuation\">;</span>\n        num1 <span class=\"token operator\">=</span> num2<span class=\"token punctuation\">;</span>\n        num2 <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\n            <span class=\"token keyword\">int</span> t<span class=\"token punctuation\">;</span>\n        t <span class=\"token operator\">=</span> num2<span class=\"token punctuation\">;</span>\n        num2 <span class=\"token operator\">=</span> num1<span class=\"token punctuation\">;</span>\n        num1 <span class=\"token operator\">=</span> t<span class=\"token punctuation\">;</span>\n        \n        \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n            \n            <span class=\"token comment\">//4.输出交换后的两个数：</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"交换后：\"</span><span class=\"token operator\">+</span>num1<span class=\"token operator\">+</span><span class=\"token string\">\"\\\\t\"</span><span class=\"token operator\">+</span>num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>面试题：两个数交换的四种方式：<a href=\"https://www.cnblogs.com/Brad-Lee/p/5808299.html\">https://www.cnblogs.com/Brad-Lee/p/5808299.html</a></p>\n<h1 id=\"扩展赋值运算符\"><a class=\"markdownIt-Anchor\" href=\"#扩展赋值运算符\">#</a> 扩展赋值运算符</h1>\n<p>【1】代码：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestOpe07</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//实现功能：给出三个数，求和：</span>\n        <span class=\"token comment\">//1.给出三个数：</span>\n        <span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num3 <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//2.求和</span>\n        <span class=\"token comment\">//int sum = num1+num2+num3;</span>\n        <span class=\"token comment\">//定义一个变量，用来接收和：</span>\n        <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">=</span> sum <span class=\"token operator\">+</span> num1<span class=\"token punctuation\">;</span><span class=\"token comment\">//等效： sum += num1;</span>\n        sum <span class=\"token operator\">=</span> sum <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">;</span><span class=\"token comment\">// sum += num2;</span>\n        sum <span class=\"token operator\">=</span> sum <span class=\"token operator\">+</span> num3<span class=\"token punctuation\">;</span><span class=\"token comment\">//sum += num3;</span>\n        <span class=\"token comment\">//3.将和输出：</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"和：\"</span><span class=\"token operator\">+</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>内存：</p>\n\n<p>【2】a+=b 和 a=a+b 区别：</p>\n<p>（1）a+=b 可读性稍差 编译效率高 底层自动进行类型转换</p>\n<p>（2）a=a+b 可读性好 编译效率低 手动进行类型转换</p>\n<p>【3】面试题</p>\n<p>（1）请问 a+=b 相当于 a=a+b, 那么也相当于 a=b+a 吗？</p>\n\n<p>（2）下面的代码哪一句出错： 4</p>\n<p>byte a = 10; —&gt;1</p>\n<p>int b = 20; —&gt;2</p>\n<p>a+=b; ----&gt;3</p>\n<p>a = a+b ;----&gt;4</p>\n<p>更正： a = (byte)(a+b);</p>\n<h1 id=\"关系运算符\"><a class=\"markdownIt-Anchor\" href=\"#关系运算符\">#</a> 关系运算符</h1>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestOpe08</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//\\>，\\&lt;，\\>=，\\&lt;=，==，!=</span>\n        <span class=\"token comment\">//关系运算符最终结果：要么是true要么是false</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span>\\<span class=\"token operator\">></span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//false</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span>\\<span class=\"token operator\">&lt;</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//true</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span>\\<span class=\"token operator\">>=</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//false</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span>\\<span class=\"token operator\">&lt;=</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//true</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">==</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//false</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">!=</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//true</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span>\\<span class=\"token operator\">&lt;</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token operator\">==</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//true</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"逻辑运算符\"><a class=\"markdownIt-Anchor\" href=\"#逻辑运算符\">#</a> 逻辑运算符</h1>\n<p>&amp;，|， &amp;&amp;，||，!，^</p>\n<p>逻辑运算符：进行逻辑运算的，运算符左右连接的都是 布尔类型的操作数，最终表达式的结果是布尔值：要么是 true，要么 false</p>\n<p>代码：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestOpe09</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 逻辑与 ：&amp; 规律：只要有一个操作数是false，那么结果一定是false</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token operator\">&amp;</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token operator\">&amp;</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token operator\">&amp;</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token operator\">&amp;</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">// 短路与：&amp;&amp; 规律：效率高一些，只要第一个表达式是false，那么第二个表达式就不用计算了，结果一定是false</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">// 逻辑或：\\| 规律：只要有一个操作数是true，那么结果一定是true</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span>\\<span class=\"token operator\">|</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span>\\<span class=\"token operator\">|</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span>\\<span class=\"token operator\">|</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span>\\<span class=\"token operator\">|</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">// 短路或：\\|\\| 规律：效率高一些，只要第一个表达式是true，那么第二个表达式就不用计算了，结果一定是true</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span>\\<span class=\"token operator\">|</span>\\<span class=\"token operator\">|</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span>\\<span class=\"token operator\">|</span>\\<span class=\"token operator\">|</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span>\\<span class=\"token operator\">|</span>\\<span class=\"token operator\">|</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span>\\<span class=\"token operator\">|</span>\\<span class=\"token operator\">|</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token comment\">//逻辑非： ! 规律：相反结果</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//false</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//true</span>\n        \n        <span class=\"token comment\">//逻辑异或： \\^ 规律：两个操作数相同，结果为false，不相同，结果为true</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span>\\<span class=\"token operator\">^</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span>\\<span class=\"token operator\">^</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span>\\<span class=\"token operator\">^</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span>\\<span class=\"token operator\">^</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>再做一个加深的练习：看代码 说结果：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestOpe10</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span>\\<span class=\"token operator\">></span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">++</span><span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//false</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//8</span>\n\n\n        <span class=\"token keyword\">int</span> a<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span>\\<span class=\"token operator\">></span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">++</span><span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//false</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//9</span>\n\n\n        <span class=\"token keyword\">int</span> m<span class=\"token operator\">=</span><span class=\"token number\">8</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span>\\<span class=\"token operator\">&lt;</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">++</span><span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//false</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//9</span>\n\n        <span class=\"token keyword\">int</span> b<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span>\\<span class=\"token operator\">&lt;</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span>b<span class=\"token operator\">++</span><span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//true</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//3</span>\n\n        <span class=\"token keyword\">int</span> c<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span>\\<span class=\"token operator\">&lt;</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>c<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//false</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//3</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"条件运算符\"><a class=\"markdownIt-Anchor\" href=\"#条件运算符\">#</a> 条件运算符</h1>\n<p>【1】条件运算符：又称： 三元运算符 / 三目运算符</p>\n<p>【2】格式：</p>\n<p>a?b:c</p>\n<p>其中 a 是一个布尔类型的表达式，返回结果要么是 true 要么 false，通过 a 的结果决定最终表达式的结果:</p>\n<p>如果 a 的结果是 true，那么表达式最终结果为 b</p>\n<p>如果 a 的结果是 false，那么表达式最终结果为 c</p>\n<p>代码：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestOpe11</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5</span>\\<span class=\"token operator\">></span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token number\">6</span><span class=\"token operator\">:</span><span class=\"token number\">9</span> <span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">==</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token string\">\"你好\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"你不好\"</span> <span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">==</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token string\">\"你好\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"你不好\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>练习：</p>\n<ol>\n<li>import java.util.*;//* 代表所有</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestOpe12</span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n<span class=\"token comment\">//实现功能：男孩女孩选择晚饭吃什么，如果意见一致，听男生的，如果意见不一致，听女生的</span>\n\n<span class=\"token comment\">//1.要让男孩女孩选择晚饭吃什么：</span>\n<span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请选择今晚吃什么：1.火锅 2.烧烤 3.麻辣烫 4.西餐\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请男孩选择：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> boyChoice <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请女孩选择：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> girlChoice <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//2.判断：</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>boyChoice<span class=\"token operator\">==</span>girlChoice<span class=\"token operator\">?</span><span class=\"token string\">\"听男孩的\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"听女孩的\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>PS: 三目运算符可以代替后续我们要学习的 if-else</p>\n<h1 id=\"位运算符了解\"><a class=\"markdownIt-Anchor\" href=\"#位运算符了解\">#</a> 位运算符 (了解)</h1>\n<p>位运算符：&amp;，|，^，~ ， &gt;&gt;，&lt;&lt;，&gt;&gt;&gt;</p>\n<p>如何区分逻辑运算符和位运算符：</p>\n<p>逻辑运算符：左右连接的是布尔类型的操作数</p>\n<p>位运算符：左右连接的是具体的数值</p>\n<p>【1】&lt;&lt; 左移</p>\n<p>3&lt;&lt;2 = 12</p>\n\n<p>面试题： 4 乘以 8 最快的方式： 4&lt;&lt;3</p>\n<p>【2】&gt;&gt; 有符号右移</p>\n<p>6&gt;&gt;2 = 1</p>\n\n<p>-6&gt;&gt;2 = -2</p>\n\n<p>【3】&gt;&gt;&gt; 无符号右移：</p>\n<p>6&gt;&gt;&gt;2 = 1</p>\n\n<p>【4】 &amp; 与</p>\n<p>6&amp;3 = 2</p>\n\n<p>【5】| 或</p>\n<p>6|3=7</p>\n\n<p>【6】^ 异或：</p>\n<p>6^3 = 5</p>\n\n<p>【7】~ 反：</p>\n<p>~6 = -7</p>\n\n<p>PS：</p>\n<p>byte 类型的表数范围的 -128 是怎么算出来的</p>\n<p>127： 01111111</p>\n<p>-128： 10000000</p>\n<p>一看就是个负数</p>\n<p>减 1： 01111111</p>\n<p>取反： 10000000 —》2^7 = 128</p>\n<p>加负号： -128</p>\n<h1 id=\"运算符总结\"><a class=\"markdownIt-Anchor\" href=\"#运算符总结\">#</a> 运算符总结</h1>\n\n\n\n<h1 id=\"运算符的优先级别\"><a class=\"markdownIt-Anchor\" href=\"#运算符的优先级别\">#</a> 运算符的优先级别</h1>\n\n<p>不需要去刻意的记优先级关系</p>\n<p>赋值 &lt; 三目 &lt; 逻辑 &lt; 关系 &lt; 算术 &lt; 单目</p>\n<p>理解运算符的结合性</p>\n<p>PS: 实际开发中我们不会写特别复杂的表达式，你要想先算谁就用 ()</p>\n<p>案例：</p>\n<p>5&lt;6 | &amp;apos;A'&gt;'a' &amp;&amp; 12*6&lt;=45+23&amp;&amp;!true</p>\n<p>=5&lt;6 | &amp;apos;A'&gt;'a' &amp;&amp; 12*6&lt;=45+23&amp;&amp;false</p>\n<p>= 5&lt;6 | &amp;apos;A'&gt;'a' &amp;&amp;72&lt;=68&amp;&amp;false</p>\n<p>= true|false&amp;&amp;false&amp;&amp;false</p>\n<p>= true&amp;&amp;false&amp;&amp;false</p>\n<p>=false&amp;&amp;false</p>\n<p>=false</p>\n","text":"# Java 中的运算符 【1】Java 语言支持如下运算符： 算术运算符 +，-，*，/，%，++（自增），–（自减） 赋值运算符 = 扩展赋值运算符 +=，-=，*=，/= 关系运算符 &gt;，&lt;，&gt;=，&lt;=，==，!= 逻辑运算符 &amp;，|， &a...","link":"","photos":[],"count_time":{"symbolsCount":"9.5k","symbolsTime":"9 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"运算符","slug":"JavaSE/运算符","count":1,"path":"api/categories/JavaSE/运算符.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#java%E4%B8%AD%E7%9A%84%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\"> Java 中的运算符</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\"> 算术运算符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%92%8C\"><span class=\"toc-text\"> &#x2F; 和 %</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\"> +</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#-2\"><span class=\"toc-text\"> ++</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\"> 赋值运算符</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%89%A9%E5%B1%95%E8%B5%8B%E5%80%BC%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\"> 扩展赋值运算符</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%B3%E7%B3%BB%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\"> 关系运算符</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\"> 逻辑运算符</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9D%A1%E4%BB%B6%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\"> 条件运算符</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%8D%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BA%86%E8%A7%A3\"><span class=\"toc-text\"> 位运算符 (了解)</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97%E7%AC%A6%E6%80%BB%E7%BB%93\"><span class=\"toc-text\"> 运算符总结</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97%E7%AC%A6%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7%E5%88%AB\"><span class=\"toc-text\"> 运算符的优先级别</span></a></li></ol>","author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"第2章_数据类型","uid":"40562668ed2ca56f9747a37e5490ff93","slug":"第2章_数据类型","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:06:15.226Z","comments":true,"path":"api/articles/第2章_数据类型.json","keywords":"java","cover":null,"text":"# 标识符 【1】标识符：读音 biao zhi fu 【2】什么是标识符？ 包，类，变量，方法… 等等，只要是起名字的地方，那个名字就是标识符 【3】标识符定义规则： 1. 四个可以（组成部分）：数字，字母，下划线_，美元符号 $ 注意：字母概念比较宽泛，指的是英文字母，汉字，...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"数据类型","slug":"JavaSE/数据类型","count":1,"path":"api/categories/JavaSE/数据类型.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"第4章_流程控制","uid":"ceae083d3bf0e78bb8b213d70446b383","slug":"第4章_流程控制","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:05:28.479Z","comments":true,"path":"api/articles/第4章_流程控制.json","keywords":"java","cover":[],"text":"# 第 4 章_流程控制 # 引入 【1】流程控制的作用： 流程控制语句是用来控制程序中各语句执行顺序的语句，可以把语句组合成能完成一定功能的小逻辑模块。 【2】控制语句的分类： 控制语句分为三类：顺序、选择和循环。 “顺序结构” 代表 “先执行 a，再执行 b” 的逻辑。 “条...","link":"","photos":[],"count_time":{"symbolsCount":"27k","symbolsTime":"25 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"流程控制","slug":"JavaSE/流程控制","count":1,"path":"api/categories/JavaSE/流程控制.json"}],"tags":[{"name":"-JavaSE","slug":"JavaSE","count":1,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}