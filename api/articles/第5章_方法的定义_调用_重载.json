{"title":"第5章_方法的定义_调用_重载","uid":"f1f69ca9615d50d9f4d1f372228160f6","slug":"第5章_方法的定义_调用_重载","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:05:23.223Z","comments":true,"path":"api/articles/第5章_方法的定义_调用_重载.json","keywords":"java","cover":[],"content":"<h1 id=\"方法的定义和调用\"><a class=\"markdownIt-Anchor\" href=\"#方法的定义和调用\">#</a> 方法的定义和调用</h1>\n<p>【1】什么是方法？</p>\n<p>方法 (method) 就是一段用来完成特定功能的代码片段，类似于其它语言的函数 (function)。</p>\n<p>方法用于定义该类或该类的实例的行为特征和功能实现。 方法是类和对象行为特征的抽象。方法很类似于面向过程中的函数。面向过程中，函数是最基本单位，整个程序由一个个函数调用组成。面向对象中，整个程序的基本单位是类，方法是从属于类和对象的。</p>\n<p>【2】方法声明格式：</p>\n<table Java语句；…=\"\" …=\"\" …=\"\">\n<thead>\n<tr>\n<th>[修饰符 1 修饰符 2 …] 返回值类型 方法名 (形式参数列表)</th>\n</tr>\n</thead>\n</table>\n<p>【3】方法的调用方式：</p>\n<table>\n<thead>\n<tr>\n<th>对象名。方法名 (实参列表)</th>\n</tr>\n</thead>\n</table>\n<p>【4】方法的详细说明</p>\n<ul>\n<li>形式参数：在方法声明时用于接收外界传入的数据。</li>\n<li>实参：调用方法时实际传给方法的数据。</li>\n<li>返回值：方法在执行完毕后返还给调用它的环境的数据。</li>\n<li>返回值类型：事先约定的返回值的数据类型，如无返回值，必须显示指定为为 void。</li>\n</ul>\n<p>【5】代码：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestMethod01</span><span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token comment\">//方法的定义：（写方法）</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">+=</span> num1<span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">+=</span> num2<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> sum<span class=\"token punctuation\">;</span><span class=\"token comment\">//将返回值返回到方法的调用处</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//10+20:</span>\n        <span class=\"token comment\">//方法的调用：（用方法）</span>\n        <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\n            <span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">+=</span> num1<span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">+=</span> num2<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n            <span class=\"token comment\">//30+90:</span>\n            <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\n            <span class=\"token keyword\">int</span> num3 <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> num4 <span class=\"token operator\">=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> sum1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span>\n        sum1 <span class=\"token operator\">+=</span> num3<span class=\"token punctuation\">;</span>\n        sum1 <span class=\"token operator\">+=</span> num4<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sum1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n            <span class=\"token comment\">//50+48:</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span><span class=\"token number\">48</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>【6】总结：</p>\n<p>1. 方法是：对特定的功能进行提取，形成一个代码片段，这个代码片段就是我们所说的方法</p>\n<p>2. 方法和方法是并列的关系，所以我们定义的方法不能写到 main 方法中</p>\n<p>3. 方法的定义–》格式：</p>\n<p>修饰符 方法返回值类型 方法名 (形参列表){</p>\n<p>方法体；</p>\n<p>return 方法返回值；</p>\n<p>}</p>\n<p>4. 方法的作用：提高代码的复用性</p>\n<p>5. 总结方法定义的格式：</p>\n<ol>\n<li>\n<p>修饰符：暂时使用 public static —&gt; 面向对象一章讲解</p>\n</li>\n<li>\n<p>方法返回值类型：方法的返回值对应的数据类型</p>\n</li>\n</ol>\n<p>数据类型： 可以是基本数据类型（byte,short,int,long,float,double,char,boolean） 也可以是引用数据类型</p>\n<ol start=\"3\">\n<li>\n<p>方法名：见名知意，首字母小写，其余遵循驼峰命名， eg: addNum , 一般尽量使用英文来命名</p>\n</li>\n<li>\n<p>形参列表：方法定义的时候需要的形式参数 ： int num1, int num2 --&gt; 相当于告诉方法的调用者：需要传入几个参数，需要传入的参数的类型</p>\n</li>\n</ol>\n<p>实际参数：方法调用的时候传入的具体的参数： 10,20 --&gt; 根据形式参数的需要传入的</p>\n<p>5) 方法体：具体的业务逻辑代码</p>\n<ol start=\"6\">\n<li>return 方法返回值；</li>\n</ol>\n<p>方法如果有返回值的话： return + 方法返回值，将返回值返回到方法的调用处</p>\n<p>方法没有返回值的话：return 可以省略不写了，并且方法的返回值类型为：void</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestMethod02</span><span class=\"token punctuation\">&#123;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">+=</span> num1<span class=\"token punctuation\">;</span>\n        sum <span class=\"token operator\">+=</span> num2<span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//return;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//10+20:</span>\n        <span class=\"token comment\">//方法的调用：（用方法）</span>\n        <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//30+90:</span>\n        <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//50+48:</span>\n        <span class=\"token comment\">//System.out.println(add(50,48));//报错：TestMethod02.java:22: 错误: 此处不允许使用 '空' 类型</span>\n\n    <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>什么时候有返回值，什么时候没有返回值？ 看心情–》看需求</p>\n<p>6. 方法的定义需要注意什么？</p>\n<p>1）形参列表要怎么写：定义几个参数，分别是什么类型的 —》不确定因素我们会当做方法的形参</p>\n<ol start=\"2\">\n<li>方法到底是否需要返回值 ，如果需要的话，返回值的类型是什么</li>\n</ol>\n<p>7. 方法的调用需要注意什么？</p>\n<p>1）实际参数要怎么传入：传入几个参数，传入什么类型的</p>\n<p>2） 方法是否有返回值需要接受</p>\n<h2 id=\"练习\"><a class=\"markdownIt-Anchor\" href=\"#练习\">#</a> 练习</h2>\n<p>【1】基本功能：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestMethod03</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//功能：我心里有一个数，你来猜，看是否猜对</span>\n        <span class=\"token comment\">//1.你猜一个数</span>\n        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请你猜一个数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> yourGuessNum <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//2.我心里有一个数</span>\n        <span class=\"token keyword\">int</span> myHeartNum <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//3.将两个数比对：</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>yourGuessNum<span class=\"token operator\">==</span>myHeartNum<span class=\"token operator\">?</span><span class=\"token string\">\"猜对了\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"猜错了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>对猜数功能提取为一个方法：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">import</span> <span class=\"token import\"><span class=\"token namespace\">java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">Scanner</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestMethod03</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//功能：我心里有一个数，你来猜，看是否猜对</span>\n        <span class=\"token comment\">//1.你猜一个数</span>\n        <span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"请你猜一个数：\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> yourGuessNum <span class=\"token operator\">=</span> sc<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//调用猜数的方法：</span>\n        <span class=\"token function\">guessNum</span><span class=\"token punctuation\">(</span>yourGuessNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">//方法的定义：功能：实现猜数功能：</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">guessNum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> yourNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//我心里有一个数(1-6)</span>\n        <span class=\"token keyword\">int</span> myHeartNum <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\\<span class=\"token operator\">*</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//将两个数比对：</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>yourNum<span class=\"token operator\">==</span>myHeartNum<span class=\"token operator\">?</span><span class=\"token string\">\"猜对了\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"猜错了\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"面试题两个数交换是否成功\"><a class=\"markdownIt-Anchor\" href=\"#面试题两个数交换是否成功\">#</a> 面试题：两个数交换是否成功</h2>\n<p>【1】面试题：请问下面代码中两个数是否交换成功：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|</p>\n<p>结果：没有交换成功：</p>\n<img src=\"/:/post/%E7%AC%AC5%E7%AB%A0_%E6%96%B9%E6%B3%95%E7%9A%84%E5%AE%9A%E4%B9%89_%E8%B0%83%E7%94%A8_%E9%87%8D%E8%BD%BD/d6adc25927a033764c5d084d040d5d88.png\" class=\"\">\n<p>原因：</p>\n<img src=\"/:/post/%E7%AC%AC5%E7%AB%A0_%E6%96%B9%E6%B3%95%E7%9A%84%E5%AE%9A%E4%B9%89_%E8%B0%83%E7%94%A8_%E9%87%8D%E8%BD%BD/2a7e512536fdb2b6389db0fa7b3f959f.png\" class=\"\">\n<h1 id=\"方法的重载\"><a class=\"markdownIt-Anchor\" href=\"#方法的重载\">#</a> 方法的重载</h1>\n<p>【1】什么是方法的重载：</p>\n<p>方法的重载是指一个类中可以定义多个方法名相同，但参数不同的方法。 调用时，会根据不同的参数自动匹配对应的方法。</p>\n<p>注意本质：重载的方法，实际是完全不同的方法，只是名称相同而已！</p>\n<p>【2】构成方法重载的条件：</p>\n<p>❀不同的含义：形参类型、形参个数、形参顺序不同</p>\n<p>❀ 只有返回值不同不构成方法的重载</p>\n<p>如：int a (String str){} 与 void a (String str){} 不构成方法重载</p>\n<p>❀ 只有形参的名称不同，不构成方法的重载</p>\n<p>如：int a (String str){} 与 int a (String s){} 不构成方法重载</p>\n<p>【3】代码：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestMethod05</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//10+20:</span>\n        <span class=\"token keyword\">int</span> sum <span class=\"token operator\">=</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//20+40+80:</span>\n        <span class=\"token comment\">//System.out.println(add(add(20,40),80));</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">40</span><span class=\"token punctuation\">,</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//30+60+90+120:</span>\n        <span class=\"token comment\">//System.out.println(add(add(30,60),add(90,120)));</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span><span class=\"token number\">120</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//9.8+4.7:</span>\n        <span class=\"token comment\">//System.out.println(add(9.8,4.7));</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">9.8</span><span class=\"token punctuation\">,</span><span class=\"token number\">4.7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">//定义一个方法：两个数相加：两个int类型数据相加</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> num1<span class=\"token operator\">+</span>num2<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">//定义一个方法：三个数相加：</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> num3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> num1<span class=\"token operator\">+</span>num2<span class=\"token operator\">+</span>num3<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">//定义一个方法：四个数相加：</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> num2<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> num3<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> num4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> num1<span class=\"token operator\">+</span>num2<span class=\"token operator\">+</span>num3<span class=\"token operator\">+</span>num4<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">//定义一个方法：两个数相加：两个double类型的数据相加</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">double</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> num1<span class=\"token punctuation\">,</span><span class=\"token keyword\">double</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> num1<span class=\"token operator\">+</span>num2<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>总结：</p>\n<p>1. 方法的重载：在同一个类中，方法名相同，形参列表不同的多个方法，构成了方法的重载。</p>\n<p>2. 方法的重载只跟：方法名和形参列表有关，与修饰符，返回值类型无关。</p>\n<p>3. 注意：形参列表不同指的是什么？</p>\n<p>（1）个数不同</p>\n<p>add() add(int num1) add(int num1,int num2)</p>\n<p>（2）顺序不同</p>\n<p>add(int num1,double num2) add(double num1,int num2)</p>\n<p>（3）类型不同</p>\n<p>add(int num1) add(double num1)</p>\n<p>4. 请问下面的方法是否构成了方法的重载？</p>\n<p>(1) add (int a) 和 add (int b) —&gt; 不构成，相当于方法的重复定义</p>\n<p>(2) public static int add (int a) 和 public static void add (int b) —&gt; 不构成</p>\n<p>【4】扩充：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestMethod06</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//级别：byte,short,char--\\>int--\\>long--\\>float---\\>double</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> num1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span> num1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">long</span> num1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------4\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token operator\">/</span>\\<span class=\"token operator\">*</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> num1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \\<span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","text":"# 方法的定义和调用 【1】什么是方法？ 方法 (method) 就是一段用来完成特定功能的代码片段，类似于其它语言的函数 (function)。 方法用于定义该类或该类的实例的行为特征和功能实现。 方法是类和对象行为特征的抽象。方法很类似于面向过程中的函数。面向过程中，函数是最...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"方法的定义_调用_重载","slug":"JavaSE/方法的定义-调用-重载","count":1,"path":"api/categories/JavaSE/方法的定义-调用-重载.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E7%9A%84%E5%AE%9A%E4%B9%89%E5%92%8C%E8%B0%83%E7%94%A8\"><span class=\"toc-text\"> 方法的定义和调用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%83%E4%B9%A0\"><span class=\"toc-text\"> 练习</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9D%A2%E8%AF%95%E9%A2%98%E4%B8%A4%E4%B8%AA%E6%95%B0%E4%BA%A4%E6%8D%A2%E6%98%AF%E5%90%A6%E6%88%90%E5%8A%9F\"><span class=\"toc-text\"> 面试题：两个数交换是否成功</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E7%9A%84%E9%87%8D%E8%BD%BD\"><span class=\"toc-text\"> 方法的重载</span></a></li></ol>","author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"第6章_数组","uid":"b0f2b0609a4c36e280aede31990da527","slug":"第6章_数组","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:06:36.622Z","comments":true,"path":"api/articles/第6章_数组.json","keywords":"java","cover":[],"text":"# 数组的引入 【1】习题引入： import java.util.Scanner; public class TestArray01&#123; public static void main(String[] args)&#123; //功能：键盘录入十个学生的成绩，求和，求...","link":"","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"17 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"数组","slug":"JavaSE/数组","count":1,"path":"api/categories/JavaSE/数组.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"第4章_流程控制","uid":"ceae083d3bf0e78bb8b213d70446b383","slug":"第4章_流程控制","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:05:28.479Z","comments":true,"path":"api/articles/第4章_流程控制.json","keywords":"java","cover":[],"text":"# 第 4 章_流程控制 # 引入 【1】流程控制的作用： 流程控制语句是用来控制程序中各语句执行顺序的语句，可以把语句组合成能完成一定功能的小逻辑模块。 【2】控制语句的分类： 控制语句分为三类：顺序、选择和循环。 “顺序结构” 代表 “先执行 a，再执行 b” 的逻辑。 “条...","link":"","photos":[],"count_time":{"symbolsCount":"27k","symbolsTime":"25 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"流程控制","slug":"JavaSE/流程控制","count":1,"path":"api/categories/JavaSE/流程控制.json"}],"tags":[{"name":"-JavaSE","slug":"JavaSE","count":1,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}