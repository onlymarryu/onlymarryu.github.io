{"total":34,"pageSize":12,"pageCount":3,"data":[{"title":"Solr","uid":"8fb356cff06527682613922b65983bb1","slug":"Solr","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T15:38:35.173Z","comments":true,"path":"api/articles/Solr.json","cover":[],"text":"# Solr # 主要内容 Solr 简介 Solr 搜索原理 Solr 单机版安装 可视化管理界面 新建核心 分词 Dataimport 使用 SolrJ 操作 Solr Spring Data for Apache Solr SolrCloud # 学习目标 知识点 要求 S...","link":"","photos":[],"count_time":{"symbolsCount":"19k","symbolsTime":"17 mins."},"categories":[{"name":"分布式","slug":"分布式","count":5,"path":"api/categories/分布式.json"},{"name":"Solr","slug":"分布式/Solr","count":1,"path":"api/categories/分布式/Solr.json"}],"tags":[{"name":"分布式","slug":"分布式","count":6,"path":"api/tags/分布式.json"},{"name":"中间件","slug":"中间件","count":3,"path":"api/tags/中间件.json"},{"name":"Solr","slug":"Solr","count":1,"path":"api/tags/Solr.json"},{"name":"快速搜索","slug":"快速搜索","count":1,"path":"api/tags/快速搜索.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Spring","uid":"946249c65165e1a3d66f50e0cb6e89e7","slug":"Spring","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T15:58:46.408Z","comments":true,"path":"api/articles/Spring.json","cover":[],"text":"# 概念： Spring 是 ** 一个轻量级 **Java 开发框架，目的是为了解决企业级应用开发的业务逻辑层和其他各层的耦合问题。它是一个分层的 JavaSE/JavaEE full-stack（一站式）轻量级开源框架，为开发 Java 应用程序提供全面的基础架构支持。Spr...","link":"","photos":[],"count_time":{"symbolsCount":"26k","symbolsTime":"24 mins."},"categories":[{"name":"Spring","slug":"Spring","count":4,"path":"api/categories/Spring.json"}],"tags":[{"name":"框架","slug":"框架","count":7,"path":"api/tags/框架.json"},{"name":"Spring","slug":"Spring","count":4,"path":"api/tags/Spring.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SpringBoot","uid":"af912e0d33a827f03582ef107fe8a87d","slug":"SpringBoot","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T15:59:10.186Z","comments":true,"path":"api/articles/SpringBoot.json","cover":[],"text":"# 简介 # 原有 Spring 优缺点分析 优点： Spring 是 Java 企业版（JAVAEE) 开发的一种相对简单的方法，通过依赖注入和面向切面编程，用简单 的 Java 对象实现了 EJB==(Enterprise Java Beans 技术的简称，又被称为企业 Ja...","link":"","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"Spring","slug":"Spring","count":4,"path":"api/categories/Spring.json"},{"name":"SpringBoot","slug":"Spring/SpringBoot","count":1,"path":"api/categories/Spring/SpringBoot.json"}],"tags":[{"name":"框架","slug":"框架","count":7,"path":"api/tags/框架.json"},{"name":"Spring","slug":"Spring","count":4,"path":"api/tags/Spring.json"},{"name":"SpringBoot","slug":"SpringBoot","count":1,"path":"api/tags/SpringBoot.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SpringMVC","uid":"cd53cdbf97b8f99c953dd3eda45eed25","slug":"SpringMVC","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T15:57:00.773Z","comments":true,"path":"api/articles/SpringMVC.json","cover":[],"text":"# 简介 M model 模型层 DAO 封装 &gt;&gt;&gt; Mybatis V view 视图层 html css js jsp C controller 控制层 Servlet 封装 &gt;&gt;&gt; springMVC SpringMVC 是 sprin...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Spring","slug":"Spring","count":4,"path":"api/categories/Spring.json"},{"name":"SpringMVC","slug":"Spring/SpringMVC","count":1,"path":"api/categories/Spring/SpringMVC.json"}],"tags":[{"name":"框架","slug":"框架","count":7,"path":"api/tags/框架.json"},{"name":"Spring","slug":"Spring","count":4,"path":"api/tags/Spring.json"},{"name":"SpringMVC","slug":"SpringMVC","count":1,"path":"api/tags/SpringMVC.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第10章_常用类","uid":"acc58c8b616a5ba0b044984346d44fef","slug":"第10章_常用类","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:08:48.460Z","comments":true,"path":"api/articles/第10章_常用类.json","cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"常用类","slug":"JavaSE/常用类","count":1,"path":"api/categories/JavaSE/常用类.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SpringSecurity","uid":"fceed54d2b78e915f81cbddb878dcc7f","slug":"SpringSecurity","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T15:56:09.379Z","comments":true,"path":"api/articles/SpringSecurity.json","cover":[],"text":" Spring Security # 一、简介 ​ Spring Security 是 Spring 家族中的一个安全管理框架。相比与另外一个安全框架 Shiro，它提供了更丰富的功能，社区资源也比 Shiro 丰富。 ​ 一般来说中大型的项目都是使用 SpringSecurit...","link":"","photos":[],"count_time":{"symbolsCount":"84k","symbolsTime":"1:16"},"categories":[{"name":"Spring","slug":"Spring","count":4,"path":"api/categories/Spring.json"},{"name":"SpringSecurity","slug":"Spring/SpringSecurity","count":1,"path":"api/categories/Spring/SpringSecurity.json"}],"tags":[{"name":"框架","slug":"框架","count":7,"path":"api/tags/框架.json"},{"name":"Spring","slug":"Spring","count":4,"path":"api/tags/Spring.json"},{"name":"SpringSecurity","slug":"SpringSecurity","count":1,"path":"api/tags/SpringSecurity.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第11章集合","uid":"eca75e640f1108d70a0a6ef373851af4","slug":"第11章集合","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:09:13.847Z","comments":true,"path":"api/articles/第11章集合.json","cover":[],"text":"# 11 集合 # Colletion 接口 # 1.1 常用方法 package com.msb.test01; import java.util.ArrayList; import java.util.Arrays; import java.util.Collection; ...","link":"","photos":[],"count_time":{"symbolsCount":"103k","symbolsTime":"1:34"},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"集合","slug":"JavaSE/集合","count":1,"path":"api/categories/JavaSE/集合.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第12章IO","uid":"378d10f920f265d272d287ff94d367ee","slug":"第12章IO","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:09:29.223Z","comments":true,"path":"api/articles/第12章IO.json","cover":[],"text":"# 12 IO 流 # File 类 # 1 对文件进行操作 public class Test01 &#123; //这是一个main方法，是程序的入口： public static void main(String[] args) throws IOException &#1...","link":"","photos":[],"count_time":{"symbolsCount":"29k","symbolsTime":"27 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"IO","slug":"JavaSE/IO","count":1,"path":"api/categories/JavaSE/IO.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第13章多线程","uid":"88cf275ceb73b48b0e7d54add12d8a27","slug":"第13章多线程","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:10:46.912Z","comments":true,"path":"api/articles/第13章多线程.json","cover":[],"text":"# 简介 【1】程序，进程，线程 ➢程序 (program)：是为完成特定任务、用某种语言编写的一组指令的集合，是一段静态的代码。 （程序是静态的） ➢进程 (process)：是程序的一次执行过程。正在运行的一个程序，进程作为资源分配的单位，在内存中会为每个进程分配不同的内存区...","link":"","photos":[],"count_time":{"symbolsCount":"28k","symbolsTime":"26 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"多线程","slug":"JavaSE/多线程","count":1,"path":"api/categories/JavaSE/多线程.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第14章_网络编程","uid":"0ed879ee9bae9c3930e12cda3b50c3db","slug":"第14章_网络编程","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:10:07.853Z","comments":true,"path":"api/articles/第14章_网络编程.json","cover":[],"text":"# 引入 【1】网络编程： 把分布在不同地理区域的计算机与专门的外部设备用通信线路互连成一个规模大、功能强的网络系统，从而使众多的计算机可以方便地互相传递信息、共享硬件、软件、数据信息等资源。 设备之间在网络中进行数据的传输，发送 / 接收数据。 【2】通信两个重要的要素：IP+...","link":"","photos":[],"count_time":{"symbolsCount":"28k","symbolsTime":"26 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"网络编程","slug":"JavaSE/网络编程","count":1,"path":"api/categories/JavaSE/网络编程.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第16章_反射","uid":"64686085a348e977c3de22cd2f49f718","slug":"第16章_反射","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:10:43.736Z","comments":true,"path":"api/articles/第16章_反射.json","cover":[],"text":"# 通过案例体会反射的好处 案例：美团外卖 —&gt; 付款 —》要么用微信支付 要么用支付宝支付 //接口的制定方：美团外卖 public interface Mtwm &#123; //在线支付功能： void payOnline(); &#125; public class...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"反射","slug":"JavaSE/反射","count":1,"path":"api/categories/JavaSE/反射.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第15章Junit注解_枚举","uid":"9d15e79fc8681384f7574570adfb152d","slug":"第15章Junit注解_枚举","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:10:49.422Z","comments":true,"path":"api/articles/第15章Junit注解_枚举.json","cover":[],"text":"# 第 15 章_Junit_注解_枚举 # Junit 单元测试 # 引入 【1】软件测试的目的： 软件测试的目的是在规定的条件下对程序进行操作，以发现程序错误，衡量软件质量，并对其是否能满足设计要求进行评估的过程。 【2】测试分类： （1）黑盒测试： 软件的黑盒测试意味着测试...","link":"","photos":[],"count_time":{"symbolsCount":"21k","symbolsTime":"19 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"Junit注解_枚举","slug":"JavaSE/Junit注解-枚举","count":1,"path":"api/categories/JavaSE/Junit注解-枚举.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://portrait.gitee.com/uploads/avatars/user/3314/9943015_zjj3366_1635594784.png!avatar100","link":"/","description":"","socials":{"github":"https://github.com/onlymarryu","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}