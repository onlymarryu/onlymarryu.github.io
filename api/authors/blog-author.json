{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}},"post_list":[{"title":"MySQL基础","uid":"4a207b7e885fdbcca8129599135e5f2e","slug":"MySQL_Create","date":"2022-10-08T07:10:28.016Z","updated":"2022-10-07T16:16:13.341Z","comments":true,"path":"api/articles/MySQL_Create.json","keywords":"java","cover":[],"text":"# MySQL 安装 # 1、卸载原来的版本 # 1、查看 mysql 的安装情况 rpm -qa | grep -i mysql # 2、删除上图安装的软件 rpm -ev --nodeps mysql57-community-release-el5-7.noarch rpm ...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"数据库","slug":"数据库","count":3,"path":"api/categories/数据库.json"},{"name":"MySQL","slug":"数据库/MySQL","count":2,"path":"api/categories/数据库/MySQL.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":2,"path":"api/tags/MySQL.json"},{"name":"数据库基础","slug":"数据库基础","count":1,"path":"api/tags/数据库基础.json"},{"name":"数据库基本知识","slug":"数据库基本知识","count":1,"path":"api/tags/数据库基本知识.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"MySQL基础","uid":"4a207b7e885fdbcca8129599135e5f2e","slug":"Docsify","date":"2022-10-08T07:10:27.998Z","updated":"2022-10-07T13:28:29.476Z","comments":true,"path":"api/articles/Docsify.json","keywords":"java","cover":[],"text":"# Docsify 搭建 官网：https://docsify.js.org/#/zh-cn/ 前提 要配置好 nodeJs 、 npm # 安装 Docsify 插件 自己创建一个要下载到本地的文件夹，然后在这里直接利用命令下载 推荐全局安装 docsify-cli 工具，可以...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"基础使用","slug":"基础使用","count":2,"path":"api/categories/基础使用.json"}],"tags":[{"name":"博客","slug":"博客","count":2,"path":"api/tags/博客.json"},{"name":"环境搭建","slug":"环境搭建","count":1,"path":"api/tags/环境搭建.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"设计模式","uid":"deffdaaa2a24a19ee257667b3b36743c","slug":"DesignMode","date":"2022-10-07T15:52:00.000Z","updated":"2022-10-07T15:52:42.759Z","comments":true,"path":"api/articles/DesignMode.json","keywords":"java","cover":[],"text":"# 谈谈你对设计模式的理解 1. 首先谈设计模式的作用：经验的传承，提高了软件复用的水平，最终达到提高软件开发效率 五大原则 设计原则 简单说明 单一职责 一个类只负责一项职责 里氏替换原则 子类可以扩展父类的功能，但不能改变父类原有的功能 依赖倒置原则 要依赖于抽象，不要依赖于...","link":"","photos":[],"count_time":{"symbolsCount":"25k","symbolsTime":"23 mins."},"categories":[{"name":"设计模式","slug":"设计模式","count":1,"path":"api/categories/设计模式.json"}],"tags":[],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"Dubbo","uid":"0ca9a116507ce2deadb100db49d2064a","slug":"Dubbo","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T15:16:56.335Z","comments":true,"path":"api/articles/Dubbo.json","keywords":"java","cover":[],"text":"# Dubbo # 主要内容 Dubbo 简介 Dubbo 架构讲解 Dubbo 支持的协议 Dubbo 支持的注册中心 第一个 Dubbo 的 Provider Admin 管理界面搭建 成 Dubbo 的 Consumer 负载均衡 完整 Dubbo 项目演示 # 学习目标 ...","link":"","photos":[],"count_time":{"symbolsCount":"19k","symbolsTime":"17 mins."},"categories":[{"name":"分布式","slug":"分布式","count":5,"path":"api/categories/分布式.json"},{"name":"Dubbo","slug":"分布式/Dubbo","count":1,"path":"api/categories/分布式/Dubbo.json"}],"tags":[{"name":"分布式","slug":"分布式","count":6,"path":"api/tags/分布式.json"},{"name":"Dubbo","slug":"Dubbo","count":1,"path":"api/tags/Dubbo.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"FastDFS","uid":"0c9b416069b21ba4788b7e5bb7998df5","slug":"FastDFS","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T15:16:33.555Z","comments":true,"path":"api/articles/FastDFS.json","keywords":"java","cover":[],"text":"# 分布式文件存储系统 FastDFS # 一、分布式文件存储 # 1. 分布式文件存储的由来 在我们的项目中有很多需要存储的内容出现，比如图片，视频，文件等等，在早期的时候用户量不大，产生的文件也不是很多，这时我们可以把文件和服务程序放在一个服务器中。 后面随着文件越来越多，服...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"分布式","slug":"分布式","count":5,"path":"api/categories/分布式.json"},{"name":"FastDFS","slug":"分布式/FastDFS","count":1,"path":"api/categories/分布式/FastDFS.json"}],"tags":[{"name":"分布式","slug":"分布式","count":6,"path":"api/tags/分布式.json"},{"name":"FastDFS","slug":"FastDFS","count":1,"path":"api/tags/FastDFS.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Mybatis","uid":"54e1d69dbe01003cc0c2e45b21bc6b3e","slug":"Mybatis","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T15:48:11.161Z","comments":true,"path":"api/articles/Mybatis.json","keywords":"java","cover":[],"text":"# 1 Mybatis 入门 原生 JDBC 实现 CURD 的问题 1 编码繁琐 2 需要我们自己将结果集映射成对象 3 性能不太好 连接池 缓存 4 SQL 语句和 java 代码的耦合度特别高 5 … … MyBatis 本是 Apache 的一个开源项目 iBatis, ...","link":"","photos":[],"count_time":{"symbolsCount":"73k","symbolsTime":"1:06"},"categories":[{"name":"Mybatis","slug":"Mybatis","count":1,"path":"api/categories/Mybatis.json"}],"tags":[{"name":"框架","slug":"框架","count":7,"path":"api/tags/框架.json"},{"name":"ORM","slug":"ORM","count":2,"path":"api/tags/ORM.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"MybatisPlus","uid":"3244bafd4b77bc1eda4a2f2a047e0e05","slug":"MybatisPlus","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T15:50:04.435Z","comments":true,"path":"api/articles/MybatisPlus.json","keywords":"java","cover":[],"text":"# 简介 MyBatis-Plus (opens new window)（简称 MP）是一个 MyBatis (opens new window) 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。 愿景 我们的愿景是成为 MyBatis 最好的...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"MybatisPlus","slug":"MybatisPlus","count":1,"path":"api/categories/MybatisPlus.json"}],"tags":[{"name":"框架","slug":"框架","count":7,"path":"api/tags/框架.json"},{"name":"ORM","slug":"ORM","count":2,"path":"api/tags/ORM.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"MySQL高级部分","uid":"b18709f70acfe8b26f3bb9db87cffd48","slug":"MySQL_Super","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:15:27.764Z","comments":true,"path":"api/articles/MySQL_Super.json","keywords":"java","cover":[],"text":"# MySQL 性能调优 环境：CentOS7.5 Version：MySQL57.39 # 主要内容 1、MySQL 的架构介绍 2、索引优化分析 3、查询截取分析 4、MySQL 的锁机制 # MySQL 文件目录结构 路径 解释 备注 /var/lib/mysql/ mys...","link":"","photos":[],"count_time":{"symbolsCount":"36k","symbolsTime":"32 mins."},"categories":[{"name":"数据库","slug":"数据库","count":3,"path":"api/categories/数据库.json"},{"name":"MySQL","slug":"数据库/MySQL","count":2,"path":"api/categories/数据库/MySQL.json"}],"tags":[{"name":"MySQL","slug":"MySQL","count":2,"path":"api/tags/MySQL.json"},{"name":"数据库","slug":"数据库","count":1,"path":"api/tags/数据库.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"RPC","uid":"2307afeebfa3d0a700b40ffec9a054c8","slug":"RPC","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:19:12.667Z","comments":true,"path":"api/articles/RPC.json","keywords":"java","cover":[],"text":"# 【RPC】 # 主要内容 项目结构变化 RPC 简介 RMI 实现 RPC HttpClient 实现 RPC Zookeeper 安装 Zookeeper 客户端常用命令 向 Zookeeper 中注册内容 从 Zookeeper 中发现内容 手写 RPC 框架 # 学习目...","link":"","photos":[],"count_time":{"symbolsCount":"24k","symbolsTime":"22 mins."},"categories":[{"name":"分布式","slug":"分布式","count":5,"path":"api/categories/分布式.json"},{"name":"RPC","slug":"分布式/RPC","count":1,"path":"api/categories/分布式/RPC.json"}],"tags":[{"name":"分布式","slug":"分布式","count":6,"path":"api/tags/分布式.json"},{"name":"RPC","slug":"RPC","count":1,"path":"api/tags/RPC.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"RabbitMQ","uid":"eb3ef2175aab37a16c1ed443702f7a7d","slug":"RabbitMQ","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:17:33.381Z","comments":true,"path":"api/articles/RabbitMQ.json","keywords":"java","cover":[],"text":"# 主要内容 AMQP 简介 RabbitMQ 简介 RabbitMQ 原理 Erlang 安装 安装 RabbitMQ RabbitMQ 账户管理 交换器 # 学习目标 知识点 要求 AMQP 简介 掌握 RabbmitMQ 简介 掌握 RabbitMQ 原理 掌握 Erlan...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"10 mins."},"categories":[{"name":"分布式","slug":"分布式","count":5,"path":"api/categories/分布式.json"},{"name":"RabbitMQ","slug":"分布式/RabbitMQ","count":1,"path":"api/categories/分布式/RabbitMQ.json"}],"tags":[{"name":"分布式","slug":"分布式","count":6,"path":"api/tags/分布式.json"},{"name":"中间件","slug":"中间件","count":3,"path":"api/tags/中间件.json"},{"name":"RabbitMQ","slug":"RabbitMQ","count":1,"path":"api/tags/RabbitMQ.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Solr","uid":"8fb356cff06527682613922b65983bb1","slug":"Solr","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T15:38:35.173Z","comments":true,"path":"api/articles/Solr.json","keywords":"java","cover":[],"text":"# Solr # 主要内容 Solr 简介 Solr 搜索原理 Solr 单机版安装 可视化管理界面 新建核心 分词 Dataimport 使用 SolrJ 操作 Solr Spring Data for Apache Solr SolrCloud # 学习目标 知识点 要求 S...","link":"","photos":[],"count_time":{"symbolsCount":"19k","symbolsTime":"17 mins."},"categories":[{"name":"分布式","slug":"分布式","count":5,"path":"api/categories/分布式.json"},{"name":"Solr","slug":"分布式/Solr","count":1,"path":"api/categories/分布式/Solr.json"}],"tags":[{"name":"分布式","slug":"分布式","count":6,"path":"api/tags/分布式.json"},{"name":"中间件","slug":"中间件","count":3,"path":"api/tags/中间件.json"},{"name":"Solr","slug":"Solr","count":1,"path":"api/tags/Solr.json"},{"name":"快速搜索","slug":"快速搜索","count":1,"path":"api/tags/快速搜索.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Redis基础","uid":"b6845422ba4775a7cab0c414606e3ecd","slug":"Redis","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:17:06.644Z","comments":true,"path":"api/articles/Redis.json","keywords":"java","cover":[],"text":"# Redis # 一.Redis 简介 # 1.NoSQL 简介 ​ 目前市场主流数据存储都是使用关系型数据库。每次操作关系型数据库时都是 I/O 操作，I/O 操作是主要影响程序执行性能原因之一，连接数据库关闭数据库都是消耗性能的过程。尽量减少对数据库的操作，能够明显的提升程...","link":"","photos":[],"count_time":{"symbolsCount":"24k","symbolsTime":"22 mins."},"categories":[{"name":"数据库","slug":"数据库","count":3,"path":"api/categories/数据库.json"},{"name":"Redis","slug":"数据库/Redis","count":1,"path":"api/categories/数据库/Redis.json"}],"tags":[{"name":"分布式","slug":"分布式","count":6,"path":"api/tags/分布式.json"},{"name":"中间件","slug":"中间件","count":3,"path":"api/tags/中间件.json"},{"name":"Redis基础","slug":"Redis基础","count":1,"path":"api/tags/Redis基础.json"},{"name":"NoSQL数据库","slug":"NoSQL数据库","count":1,"path":"api/tags/NoSQL数据库.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Spring","uid":"946249c65165e1a3d66f50e0cb6e89e7","slug":"Spring","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T15:58:46.408Z","comments":true,"path":"api/articles/Spring.json","keywords":"java","cover":[],"text":"# 概念： Spring 是 ** 一个轻量级 **Java 开发框架，目的是为了解决企业级应用开发的业务逻辑层和其他各层的耦合问题。它是一个分层的 JavaSE/JavaEE full-stack（一站式）轻量级开源框架，为开发 Java 应用程序提供全面的基础架构支持。Spr...","link":"","photos":[],"count_time":{"symbolsCount":"26k","symbolsTime":"24 mins."},"categories":[{"name":"Spring","slug":"Spring","count":4,"path":"api/categories/Spring.json"}],"tags":[{"name":"框架","slug":"框架","count":7,"path":"api/tags/框架.json"},{"name":"Spring","slug":"Spring","count":4,"path":"api/tags/Spring.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SpringBoot","uid":"af912e0d33a827f03582ef107fe8a87d","slug":"SpringBoot","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T15:59:10.186Z","comments":true,"path":"api/articles/SpringBoot.json","keywords":"java","cover":[],"text":"# 简介 # 原有 Spring 优缺点分析 优点： Spring 是 Java 企业版（JAVAEE) 开发的一种相对简单的方法，通过依赖注入和面向切面编程，用简单 的 Java 对象实现了 EJB==(Enterprise Java Beans 技术的简称，又被称为企业 Ja...","link":"","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"Spring","slug":"Spring","count":4,"path":"api/categories/Spring.json"},{"name":"SpringBoot","slug":"Spring/SpringBoot","count":1,"path":"api/categories/Spring/SpringBoot.json"}],"tags":[{"name":"框架","slug":"框架","count":7,"path":"api/tags/框架.json"},{"name":"Spring","slug":"Spring","count":4,"path":"api/tags/Spring.json"},{"name":"SpringBoot","slug":"SpringBoot","count":1,"path":"api/tags/SpringBoot.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SpringMVC","uid":"cd53cdbf97b8f99c953dd3eda45eed25","slug":"SpringMVC","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T15:57:00.773Z","comments":true,"path":"api/articles/SpringMVC.json","keywords":"java","cover":[],"text":"# 简介 M model 模型层 DAO 封装 &gt;&gt;&gt; Mybatis V view 视图层 html css js jsp C controller 控制层 Servlet 封装 &gt;&gt;&gt; springMVC SpringMVC 是 sprin...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"Spring","slug":"Spring","count":4,"path":"api/categories/Spring.json"},{"name":"SpringMVC","slug":"Spring/SpringMVC","count":1,"path":"api/categories/Spring/SpringMVC.json"}],"tags":[{"name":"框架","slug":"框架","count":7,"path":"api/tags/框架.json"},{"name":"Spring","slug":"Spring","count":4,"path":"api/tags/Spring.json"},{"name":"SpringMVC","slug":"SpringMVC","count":1,"path":"api/tags/SpringMVC.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"SpringSecurity","uid":"fceed54d2b78e915f81cbddb878dcc7f","slug":"SpringSecurity","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T15:56:09.379Z","comments":true,"path":"api/articles/SpringSecurity.json","keywords":"java","cover":[],"text":" Spring Security # 一、简介 ​ Spring Security 是 Spring 家族中的一个安全管理框架。相比与另外一个安全框架 Shiro，它提供了更丰富的功能，社区资源也比 Shiro 丰富。 ​ 一般来说中大型的项目都是使用 SpringSecurit...","link":"","photos":[],"count_time":{"symbolsCount":"84k","symbolsTime":"1:16"},"categories":[{"name":"Spring","slug":"Spring","count":4,"path":"api/categories/Spring.json"},{"name":"SpringSecurity","slug":"Spring/SpringSecurity","count":1,"path":"api/categories/Spring/SpringSecurity.json"}],"tags":[{"name":"框架","slug":"框架","count":7,"path":"api/tags/框架.json"},{"name":"Spring","slug":"Spring","count":4,"path":"api/tags/Spring.json"},{"name":"SpringSecurity","slug":"SpringSecurity","count":1,"path":"api/tags/SpringSecurity.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第10章_常用类","uid":"acc58c8b616a5ba0b044984346d44fef","slug":"第10章_常用类","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:08:48.460Z","comments":true,"path":"api/articles/第10章_常用类.json","keywords":"java","cover":null,"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"常用类","slug":"JavaSE/常用类","count":1,"path":"api/categories/JavaSE/常用类.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第13章多线程","uid":"88cf275ceb73b48b0e7d54add12d8a27","slug":"第13章多线程","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:10:46.912Z","comments":true,"path":"api/articles/第13章多线程.json","keywords":"java","cover":[],"text":"# 简介 【1】程序，进程，线程 ➢程序 (program)：是为完成特定任务、用某种语言编写的一组指令的集合，是一段静态的代码。 （程序是静态的） ➢进程 (process)：是程序的一次执行过程。正在运行的一个程序，进程作为资源分配的单位，在内存中会为每个进程分配不同的内存区...","link":"","photos":[],"count_time":{"symbolsCount":"28k","symbolsTime":"26 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"多线程","slug":"JavaSE/多线程","count":1,"path":"api/categories/JavaSE/多线程.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第12章IO","uid":"378d10f920f265d272d287ff94d367ee","slug":"第12章IO","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:09:29.223Z","comments":true,"path":"api/articles/第12章IO.json","keywords":"java","cover":[],"text":"# 12 IO 流 # File 类 # 1 对文件进行操作 public class Test01 &#123; //这是一个main方法，是程序的入口： public static void main(String[] args) throws IOException &#1...","link":"","photos":[],"count_time":{"symbolsCount":"29k","symbolsTime":"27 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"IO","slug":"JavaSE/IO","count":1,"path":"api/categories/JavaSE/IO.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第15章Junit注解_枚举","uid":"9d15e79fc8681384f7574570adfb152d","slug":"第15章Junit注解_枚举","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:10:49.422Z","comments":true,"path":"api/articles/第15章Junit注解_枚举.json","keywords":"java","cover":[],"text":"# 第 15 章_Junit_注解_枚举 # Junit 单元测试 # 引入 【1】软件测试的目的： 软件测试的目的是在规定的条件下对程序进行操作，以发现程序错误，衡量软件质量，并对其是否能满足设计要求进行评估的过程。 【2】测试分类： （1）黑盒测试： 软件的黑盒测试意味着测试...","link":"","photos":[],"count_time":{"symbolsCount":"21k","symbolsTime":"19 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"Junit注解_枚举","slug":"JavaSE/Junit注解-枚举","count":1,"path":"api/categories/JavaSE/Junit注解-枚举.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第16章_反射","uid":"64686085a348e977c3de22cd2f49f718","slug":"第16章_反射","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:10:43.736Z","comments":true,"path":"api/articles/第16章_反射.json","keywords":"java","cover":[],"text":"# 通过案例体会反射的好处 案例：美团外卖 —&gt; 付款 —》要么用微信支付 要么用支付宝支付 //接口的制定方：美团外卖 public interface Mtwm &#123; //在线支付功能： void payOnline(); &#125; public class...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"反射","slug":"JavaSE/反射","count":1,"path":"api/categories/JavaSE/反射.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第14章_网络编程","uid":"0ed879ee9bae9c3930e12cda3b50c3db","slug":"第14章_网络编程","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:10:07.853Z","comments":true,"path":"api/articles/第14章_网络编程.json","keywords":"java","cover":[],"text":"# 引入 【1】网络编程： 把分布在不同地理区域的计算机与专门的外部设备用通信线路互连成一个规模大、功能强的网络系统，从而使众多的计算机可以方便地互相传递信息、共享硬件、软件、数据信息等资源。 设备之间在网络中进行数据的传输，发送 / 接收数据。 【2】通信两个重要的要素：IP+...","link":"","photos":[],"count_time":{"symbolsCount":"28k","symbolsTime":"26 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"网络编程","slug":"JavaSE/网络编程","count":1,"path":"api/categories/JavaSE/网络编程.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第1章初识JAVA","uid":"9a615c2cbfa580b4a365b136d5081085","slug":"第1章初识JAVA","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:06:12.334Z","comments":true,"path":"api/articles/第1章初识JAVA.json","keywords":"java","cover":[],"text":"# 计算机语言的发展历史 计算机编程语言的发展，是随着计算机本身硬件发展而发展的。硬件速度越快、体积越小、成本越低，应用到人类社会的场景就会越多，那么所需要的算法就会越复杂，也就要求计算机编程语言越高级。最初重达几十吨但一秒只能运算 5000 次的 ENIAC (世界上第一台计算...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"JAVA简介","slug":"JavaSE/JAVA简介","count":1,"path":"api/categories/JavaSE/JAVA简介.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第2章_数据类型","uid":"40562668ed2ca56f9747a37e5490ff93","slug":"第2章_数据类型","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:06:15.226Z","comments":true,"path":"api/articles/第2章_数据类型.json","keywords":"java","cover":null,"text":"# 标识符 【1】标识符：读音 biao zhi fu 【2】什么是标识符？ 包，类，变量，方法… 等等，只要是起名字的地方，那个名字就是标识符 【3】标识符定义规则： 1. 四个可以（组成部分）：数字，字母，下划线_，美元符号 $ 注意：字母概念比较宽泛，指的是英文字母，汉字，...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"数据类型","slug":"JavaSE/数据类型","count":1,"path":"api/categories/JavaSE/数据类型.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第3章_运算符","uid":"660e7e650553bed7272bd20db06da01d","slug":"第3章_运算符","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:05:46.693Z","comments":true,"path":"api/articles/第3章_运算符.json","keywords":"java","cover":null,"text":"# Java 中的运算符 【1】Java 语言支持如下运算符： 算术运算符 +，-，*，/，%，++（自增），–（自减） 赋值运算符 = 扩展赋值运算符 +=，-=，*=，/= 关系运算符 &gt;，&lt;，&gt;=，&lt;=，==，!= 逻辑运算符 &amp;，|， &a...","link":"","photos":[],"count_time":{"symbolsCount":"9.5k","symbolsTime":"9 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"运算符","slug":"JavaSE/运算符","count":1,"path":"api/categories/JavaSE/运算符.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第5章_方法的定义_调用_重载","uid":"f1f69ca9615d50d9f4d1f372228160f6","slug":"第5章_方法的定义_调用_重载","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:05:23.223Z","comments":true,"path":"api/articles/第5章_方法的定义_调用_重载.json","keywords":"java","cover":[],"text":"# 方法的定义和调用 【1】什么是方法？ 方法 (method) 就是一段用来完成特定功能的代码片段，类似于其它语言的函数 (function)。 方法用于定义该类或该类的实例的行为特征和功能实现。 方法是类和对象行为特征的抽象。方法很类似于面向过程中的函数。面向过程中，函数是最...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"方法的定义_调用_重载","slug":"JavaSE/方法的定义-调用-重载","count":1,"path":"api/categories/JavaSE/方法的定义-调用-重载.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第4章_流程控制","uid":"ceae083d3bf0e78bb8b213d70446b383","slug":"第4章_流程控制","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:05:28.479Z","comments":true,"path":"api/articles/第4章_流程控制.json","keywords":"java","cover":[],"text":"# 第 4 章_流程控制 # 引入 【1】流程控制的作用： 流程控制语句是用来控制程序中各语句执行顺序的语句，可以把语句组合成能完成一定功能的小逻辑模块。 【2】控制语句的分类： 控制语句分为三类：顺序、选择和循环。 “顺序结构” 代表 “先执行 a，再执行 b” 的逻辑。 “条...","link":"","photos":[],"count_time":{"symbolsCount":"27k","symbolsTime":"25 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"流程控制","slug":"JavaSE/流程控制","count":1,"path":"api/categories/JavaSE/流程控制.json"}],"tags":[{"name":"-JavaSE","slug":"JavaSE","count":1,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第11章集合","uid":"eca75e640f1108d70a0a6ef373851af4","slug":"第11章集合","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:09:13.847Z","comments":true,"path":"api/articles/第11章集合.json","keywords":"java","cover":[],"text":"# 11 集合 # Colletion 接口 # 1.1 常用方法 package com.msb.test01; import java.util.ArrayList; import java.util.Arrays; import java.util.Collection; ...","link":"","photos":[],"count_time":{"symbolsCount":"103k","symbolsTime":"1:34"},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"集合","slug":"JavaSE/集合","count":1,"path":"api/categories/JavaSE/集合.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第6章_数组","uid":"b0f2b0609a4c36e280aede31990da527","slug":"第6章_数组","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:06:36.622Z","comments":true,"path":"api/articles/第6章_数组.json","keywords":"java","cover":[],"text":"# 数组的引入 【1】习题引入： import java.util.Scanner; public class TestArray01&#123; public static void main(String[] args)&#123; //功能：键盘录入十个学生的成绩，求和，求...","link":"","photos":[],"count_time":{"symbolsCount":"18k","symbolsTime":"17 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"数组","slug":"JavaSE/数组","count":1,"path":"api/categories/JavaSE/数组.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第7章_IDEA的使用","uid":"f9af075652e34da99f9e9313498965b6","slug":"第7章_IDEA的使用","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:37:25.514Z","comments":true,"path":"api/articles/第7章_IDEA的使用.json","keywords":"java","cover":[],"text":"# IDE 集成开发环境（IDE，Integrated Development Environment ）是用于提供程序开发环境的应用程序，一般包括代码编辑器、编译器、调试器和图形用户界面等工具。集成了代码编写功能、分析功能、编译功能、调试功能等一体化的开发软件服务套。所有具备这...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"IDEA的使用","slug":"JavaSE/IDEA的使用","count":1,"path":"api/categories/JavaSE/IDEA的使用.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第9章_异常","uid":"dfd2b6521673d23cbd9aef76b70cc5b2","slug":"第9章_异常","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:08:16.870Z","comments":true,"path":"api/articles/第9章_异常.json","keywords":"java","cover":[],"text":"# 习题的引入 【1】代码： public class Test &#123; //这是一个main方法，是程序的入口： public static void main(String[] args) &#123; //实现一个功能：键盘录入两个数，求商： Scanner sc =...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"异常","slug":"JavaSE/异常","count":1,"path":"api/categories/JavaSE/异常.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"第8章_面向对象","uid":"a9c033b7d80ad30fa176598f67ef440a","slug":"第8章_面向对象","date":"2022-10-06T16:00:00.000Z","updated":"2022-10-07T16:07:59.089Z","comments":true,"path":"api/articles/第8章_面向对象.json","keywords":"java","cover":[],"text":"# 面向过程和面向对象的区别 面向过程：当事件比较简单的时候，利用面向过程，注重的是事件的具体的步骤 / 过程，注重的是过程中的具体的行为，以函数为最小单位，考虑怎么做。 面向对象：注重找 “参与者”, 将功能封装进对象，强调具备了功能的对象，以类 / 对象为最小单位，考虑谁来做...","link":"","photos":[],"count_time":{"symbolsCount":"50k","symbolsTime":"45 mins."},"categories":[{"name":"JavaSE","slug":"JavaSE","count":16,"path":"api/categories/JavaSE.json"},{"name":"面向对象","slug":"JavaSE/面向对象","count":1,"path":"api/categories/JavaSE/面向对象.json"}],"tags":[{"name":"JavaSE","slug":"JavaSE","count":15,"path":"api/tags/JavaSE.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"hexo","uid":"45b05c0adc7d6b51711d3e13e977b9ba","slug":"hexo","date":"2022-10-06T06:50:57.000Z","updated":"2022-10-08T07:00:05.819Z","comments":true,"path":"api/articles/hexo.json","keywords":"java","cover":[],"text":" title: hexo date: 2022-10-06 14:53:52 categories: - 基础使用 tags: - 环境搭建 - 博客 # 介绍 hexo 是一个基于 nodejs 的静态博客网站生成器，作者是来自台湾的 Tommy Chen ，为许多技术博客的博...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"基础使用","slug":"基础使用","count":2,"path":"api/categories/基础使用.json"}],"tags":[{"name":"博客","slug":"博客","count":2,"path":"api/tags/博客.json"},{"name":"框架","slug":"框架","count":7,"path":"api/tags/框架.json"}],"author":{"name":"雾都","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}],"categories":34,"tags":57,"word_count":"773k","post_count":33}